// Copyright 2016 Workiva Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/// Various prop related mixins to be used with [UiComponent] descendants.
library over_react.prop_mixins;

import 'package:over_react/over_react.dart' show AriaPropsMapView, AriaPropsMixin, DomProps;
// Must import these consts because they are used in the transformed code.
// ignore: unused_import
import 'package:over_react/over_react.dart' show PropDescriptor, ConsumedProps;
import 'package:over_react/src/component/callback_typedefs.dart';
import 'package:over_react/src/component_declaration/annotations.dart';

/// Typed getters/setters for reserved React props.
/// To be used as a mixin for React components and builders.
@PropsMixin(keyNamespace: '')
abstract class ReactPropsMixin {    /* GENERATED CONSTANTS */ static const ConsumedProps $consumedProps = const ConsumedProps($props, $propKeys); static const PropDescriptor _$prop__children__ReactPropsMixin = const PropDescriptor(_$key__children__ReactPropsMixin), _$prop__ref__ReactPropsMixin = const PropDescriptor(_$key__ref__ReactPropsMixin); static const List<PropDescriptor> $props = const [_$prop__children__ReactPropsMixin, _$prop__ref__ReactPropsMixin]; static const String _$key__children__ReactPropsMixin = 'children', _$key__ref__ReactPropsMixin = 'ref'; static const List<String> $propKeys = const [_$key__children__ReactPropsMixin, _$key__ref__ReactPropsMixin]; 
  Map get props;

  /// The children that were passed in to this component when it was built.
  List get children => props[_$key__children__ReactPropsMixin];  set children(List value) => props[_$key__children__ReactPropsMixin] = value;

  /// A String that differentiates a component from its siblings.
  ///
  /// When setting [key] you can use any [Object], its `toString()` method will be called when applying the value.
  ///
  /// Keys are necessary when children are dynamic, such as those passed in as a [List],
  /// but are generally not required when using variadic children.
  ///
  /// For more info, see:
  ///
  /// * <https://facebook.github.io/react/docs/multiple-components.html#children>
  /// * <https://facebook.github.io/react/docs/reconciliation.html>
  String get key        => props['key'];
  set key(Object value) => props['key'] = value == null ? null : value.toString();

  /// Either a String used to retrieve the element at a later time via [react.Component.ref],
  /// or a Function that gets called with the element when it is mounted.
  ///
  /// See: <https://facebook.github.io/react/docs/more-about-refs.html>.
  dynamic get ref => props[_$key__ref__ReactPropsMixin];  set ref(dynamic value) => props[_$key__ref__ReactPropsMixin] = value;
}

/// Typed getters/setters for reserved DOM-related props.
/// To be used as a mixin for React components and builders.
@PropsMixin(keyNamespace: '')
abstract class DomPropsMixin {    /* GENERATED CONSTANTS */ static const ConsumedProps $consumedProps = const ConsumedProps($props, $propKeys); static const PropDescriptor _$prop__cols__DomPropsMixin = const PropDescriptor(_$key__cols__DomPropsMixin), _$prop__rows__DomPropsMixin = const PropDescriptor(_$key__rows__DomPropsMixin), _$prop__size__DomPropsMixin = const PropDescriptor(_$key__size__DomPropsMixin), _$prop__span__DomPropsMixin = const PropDescriptor(_$key__span__DomPropsMixin), _$prop__start__DomPropsMixin = const PropDescriptor(_$key__start__DomPropsMixin), _$prop__allowFullScreen__DomPropsMixin = const PropDescriptor(_$key__allowFullScreen__DomPropsMixin), _$prop__async__DomPropsMixin = const PropDescriptor(_$key__async__DomPropsMixin), _$prop__autoPlay__DomPropsMixin = const PropDescriptor(_$key__autoPlay__DomPropsMixin), _$prop__checked__DomPropsMixin = const PropDescriptor(_$key__checked__DomPropsMixin), _$prop__controls__DomPropsMixin = const PropDescriptor(_$key__controls__DomPropsMixin), _$prop__defer__DomPropsMixin = const PropDescriptor(_$key__defer__DomPropsMixin), _$prop__disabled__DomPropsMixin = const PropDescriptor(_$key__disabled__DomPropsMixin), _$prop__formNoValidate__DomPropsMixin = const PropDescriptor(_$key__formNoValidate__DomPropsMixin), _$prop__hidden__DomPropsMixin = const PropDescriptor(_$key__hidden__DomPropsMixin), _$prop__loop__DomPropsMixin = const PropDescriptor(_$key__loop__DomPropsMixin), _$prop__multiple__DomPropsMixin = const PropDescriptor(_$key__multiple__DomPropsMixin), _$prop__muted__DomPropsMixin = const PropDescriptor(_$key__muted__DomPropsMixin), _$prop__noValidate__DomPropsMixin = const PropDescriptor(_$key__noValidate__DomPropsMixin), _$prop__readOnly__DomPropsMixin = const PropDescriptor(_$key__readOnly__DomPropsMixin), _$prop__required__DomPropsMixin = const PropDescriptor(_$key__required__DomPropsMixin), _$prop__seamless__DomPropsMixin = const PropDescriptor(_$key__seamless__DomPropsMixin), _$prop__selected__DomPropsMixin = const PropDescriptor(_$key__selected__DomPropsMixin), _$prop__style__DomPropsMixin = const PropDescriptor(_$key__style__DomPropsMixin), _$prop__className__DomPropsMixin = const PropDescriptor(_$key__className__DomPropsMixin), _$prop__title__DomPropsMixin = const PropDescriptor(_$key__title__DomPropsMixin), _$prop__id__DomPropsMixin = const PropDescriptor(_$key__id__DomPropsMixin), _$prop__accept__DomPropsMixin = const PropDescriptor(_$key__accept__DomPropsMixin), _$prop__acceptCharset__DomPropsMixin = const PropDescriptor(_$key__acceptCharset__DomPropsMixin), _$prop__accessKey__DomPropsMixin = const PropDescriptor(_$key__accessKey__DomPropsMixin), _$prop__action__DomPropsMixin = const PropDescriptor(_$key__action__DomPropsMixin), _$prop__allowTransparency__DomPropsMixin = const PropDescriptor(_$key__allowTransparency__DomPropsMixin), _$prop__alt__DomPropsMixin = const PropDescriptor(_$key__alt__DomPropsMixin), _$prop__autoComplete__DomPropsMixin = const PropDescriptor(_$key__autoComplete__DomPropsMixin), _$prop__cellPadding__DomPropsMixin = const PropDescriptor(_$key__cellPadding__DomPropsMixin), _$prop__cellSpacing__DomPropsMixin = const PropDescriptor(_$key__cellSpacing__DomPropsMixin), _$prop__charSet__DomPropsMixin = const PropDescriptor(_$key__charSet__DomPropsMixin), _$prop__classID__DomPropsMixin = const PropDescriptor(_$key__classID__DomPropsMixin), _$prop__colSpan__DomPropsMixin = const PropDescriptor(_$key__colSpan__DomPropsMixin), _$prop__content__DomPropsMixin = const PropDescriptor(_$key__content__DomPropsMixin), _$prop__contentEditable__DomPropsMixin = const PropDescriptor(_$key__contentEditable__DomPropsMixin), _$prop__contextMenu__DomPropsMixin = const PropDescriptor(_$key__contextMenu__DomPropsMixin), _$prop__coords__DomPropsMixin = const PropDescriptor(_$key__coords__DomPropsMixin), _$prop__crossOrigin__DomPropsMixin = const PropDescriptor(_$key__crossOrigin__DomPropsMixin), _$prop__data__DomPropsMixin = const PropDescriptor(_$key__data__DomPropsMixin), _$prop__dateTime__DomPropsMixin = const PropDescriptor(_$key__dateTime__DomPropsMixin), _$prop__dir__DomPropsMixin = const PropDescriptor(_$key__dir__DomPropsMixin), _$prop__download__DomPropsMixin = const PropDescriptor(_$key__download__DomPropsMixin), _$prop__draggable__DomPropsMixin = const PropDescriptor(_$key__draggable__DomPropsMixin), _$prop__encType__DomPropsMixin = const PropDescriptor(_$key__encType__DomPropsMixin), _$prop__form__DomPropsMixin = const PropDescriptor(_$key__form__DomPropsMixin), _$prop__frameBorder__DomPropsMixin = const PropDescriptor(_$key__frameBorder__DomPropsMixin), _$prop__height__DomPropsMixin = const PropDescriptor(_$key__height__DomPropsMixin), _$prop__href__DomPropsMixin = const PropDescriptor(_$key__href__DomPropsMixin), _$prop__hrefLang__DomPropsMixin = const PropDescriptor(_$key__hrefLang__DomPropsMixin), _$prop__htmlFor__DomPropsMixin = const PropDescriptor(_$key__htmlFor__DomPropsMixin), _$prop__httpEquiv__DomPropsMixin = const PropDescriptor(_$key__httpEquiv__DomPropsMixin), _$prop__icon__DomPropsMixin = const PropDescriptor(_$key__icon__DomPropsMixin), _$prop__label__DomPropsMixin = const PropDescriptor(_$key__label__DomPropsMixin), _$prop__lang__DomPropsMixin = const PropDescriptor(_$key__lang__DomPropsMixin), _$prop__list__DomPropsMixin = const PropDescriptor(_$key__list__DomPropsMixin), _$prop__manifest__DomPropsMixin = const PropDescriptor(_$key__manifest__DomPropsMixin), _$prop__max__DomPropsMixin = const PropDescriptor(_$key__max__DomPropsMixin), _$prop__maxLength__DomPropsMixin = const PropDescriptor(_$key__maxLength__DomPropsMixin), _$prop__media__DomPropsMixin = const PropDescriptor(_$key__media__DomPropsMixin), _$prop__mediaGroup__DomPropsMixin = const PropDescriptor(_$key__mediaGroup__DomPropsMixin), _$prop__method__DomPropsMixin = const PropDescriptor(_$key__method__DomPropsMixin), _$prop__min__DomPropsMixin = const PropDescriptor(_$key__min__DomPropsMixin), _$prop__name__DomPropsMixin = const PropDescriptor(_$key__name__DomPropsMixin), _$prop__open__DomPropsMixin = const PropDescriptor(_$key__open__DomPropsMixin), _$prop__pattern__DomPropsMixin = const PropDescriptor(_$key__pattern__DomPropsMixin), _$prop__placeholder__DomPropsMixin = const PropDescriptor(_$key__placeholder__DomPropsMixin), _$prop__poster__DomPropsMixin = const PropDescriptor(_$key__poster__DomPropsMixin), _$prop__preload__DomPropsMixin = const PropDescriptor(_$key__preload__DomPropsMixin), _$prop__radioGroup__DomPropsMixin = const PropDescriptor(_$key__radioGroup__DomPropsMixin), _$prop__rel__DomPropsMixin = const PropDescriptor(_$key__rel__DomPropsMixin), _$prop__role__DomPropsMixin = const PropDescriptor(_$key__role__DomPropsMixin), _$prop__rowSpan__DomPropsMixin = const PropDescriptor(_$key__rowSpan__DomPropsMixin), _$prop__sandbox__DomPropsMixin = const PropDescriptor(_$key__sandbox__DomPropsMixin), _$prop__scope__DomPropsMixin = const PropDescriptor(_$key__scope__DomPropsMixin), _$prop__scrolling__DomPropsMixin = const PropDescriptor(_$key__scrolling__DomPropsMixin), _$prop__shape__DomPropsMixin = const PropDescriptor(_$key__shape__DomPropsMixin), _$prop__sizes__DomPropsMixin = const PropDescriptor(_$key__sizes__DomPropsMixin), _$prop__spellCheck__DomPropsMixin = const PropDescriptor(_$key__spellCheck__DomPropsMixin), _$prop__src__DomPropsMixin = const PropDescriptor(_$key__src__DomPropsMixin), _$prop__srcDoc__DomPropsMixin = const PropDescriptor(_$key__srcDoc__DomPropsMixin), _$prop__srcSet__DomPropsMixin = const PropDescriptor(_$key__srcSet__DomPropsMixin), _$prop__step__DomPropsMixin = const PropDescriptor(_$key__step__DomPropsMixin), _$prop__tabIndex__DomPropsMixin = const PropDescriptor(_$key__tabIndex__DomPropsMixin), _$prop__target__DomPropsMixin = const PropDescriptor(_$key__target__DomPropsMixin), _$prop__type__DomPropsMixin = const PropDescriptor(_$key__type__DomPropsMixin), _$prop__useMap__DomPropsMixin = const PropDescriptor(_$key__useMap__DomPropsMixin), _$prop__value__DomPropsMixin = const PropDescriptor(_$key__value__DomPropsMixin), _$prop__width__DomPropsMixin = const PropDescriptor(_$key__width__DomPropsMixin), _$prop__wmode__DomPropsMixin = const PropDescriptor(_$key__wmode__DomPropsMixin), _$prop__onCopy__DomPropsMixin = const PropDescriptor(_$key__onCopy__DomPropsMixin), _$prop__onCut__DomPropsMixin = const PropDescriptor(_$key__onCut__DomPropsMixin), _$prop__onPaste__DomPropsMixin = const PropDescriptor(_$key__onPaste__DomPropsMixin), _$prop__onKeyDown__DomPropsMixin = const PropDescriptor(_$key__onKeyDown__DomPropsMixin), _$prop__onKeyPress__DomPropsMixin = const PropDescriptor(_$key__onKeyPress__DomPropsMixin), _$prop__onKeyUp__DomPropsMixin = const PropDescriptor(_$key__onKeyUp__DomPropsMixin), _$prop__onFocus__DomPropsMixin = const PropDescriptor(_$key__onFocus__DomPropsMixin), _$prop__onBlur__DomPropsMixin = const PropDescriptor(_$key__onBlur__DomPropsMixin), _$prop__onChange__DomPropsMixin = const PropDescriptor(_$key__onChange__DomPropsMixin), _$prop__onInput__DomPropsMixin = const PropDescriptor(_$key__onInput__DomPropsMixin), _$prop__onSubmit__DomPropsMixin = const PropDescriptor(_$key__onSubmit__DomPropsMixin), _$prop__onReset__DomPropsMixin = const PropDescriptor(_$key__onReset__DomPropsMixin), _$prop__onClick__DomPropsMixin = const PropDescriptor(_$key__onClick__DomPropsMixin), _$prop__onContextMenu__DomPropsMixin = const PropDescriptor(_$key__onContextMenu__DomPropsMixin), _$prop__onDoubleClick__DomPropsMixin = const PropDescriptor(_$key__onDoubleClick__DomPropsMixin), _$prop__onDrag__DomPropsMixin = const PropDescriptor(_$key__onDrag__DomPropsMixin), _$prop__onDragEnd__DomPropsMixin = const PropDescriptor(_$key__onDragEnd__DomPropsMixin), _$prop__onDragEnter__DomPropsMixin = const PropDescriptor(_$key__onDragEnter__DomPropsMixin), _$prop__onDragExit__DomPropsMixin = const PropDescriptor(_$key__onDragExit__DomPropsMixin), _$prop__onDragLeave__DomPropsMixin = const PropDescriptor(_$key__onDragLeave__DomPropsMixin), _$prop__onDragOver__DomPropsMixin = const PropDescriptor(_$key__onDragOver__DomPropsMixin), _$prop__onDragStart__DomPropsMixin = const PropDescriptor(_$key__onDragStart__DomPropsMixin), _$prop__onDrop__DomPropsMixin = const PropDescriptor(_$key__onDrop__DomPropsMixin), _$prop__onMouseDown__DomPropsMixin = const PropDescriptor(_$key__onMouseDown__DomPropsMixin), _$prop__onMouseEnter__DomPropsMixin = const PropDescriptor(_$key__onMouseEnter__DomPropsMixin), _$prop__onMouseLeave__DomPropsMixin = const PropDescriptor(_$key__onMouseLeave__DomPropsMixin), _$prop__onMouseMove__DomPropsMixin = const PropDescriptor(_$key__onMouseMove__DomPropsMixin), _$prop__onMouseOut__DomPropsMixin = const PropDescriptor(_$key__onMouseOut__DomPropsMixin), _$prop__onMouseOver__DomPropsMixin = const PropDescriptor(_$key__onMouseOver__DomPropsMixin), _$prop__onMouseUp__DomPropsMixin = const PropDescriptor(_$key__onMouseUp__DomPropsMixin), _$prop__onTouchCancel__DomPropsMixin = const PropDescriptor(_$key__onTouchCancel__DomPropsMixin), _$prop__onTouchEnd__DomPropsMixin = const PropDescriptor(_$key__onTouchEnd__DomPropsMixin), _$prop__onTouchMove__DomPropsMixin = const PropDescriptor(_$key__onTouchMove__DomPropsMixin), _$prop__onTouchStart__DomPropsMixin = const PropDescriptor(_$key__onTouchStart__DomPropsMixin), _$prop__onScroll__DomPropsMixin = const PropDescriptor(_$key__onScroll__DomPropsMixin), _$prop__onWheel__DomPropsMixin = const PropDescriptor(_$key__onWheel__DomPropsMixin), _$prop__onCopyCapture__DomPropsMixin = const PropDescriptor(_$key__onCopyCapture__DomPropsMixin), _$prop__onCutCapture__DomPropsMixin = const PropDescriptor(_$key__onCutCapture__DomPropsMixin), _$prop__onPasteCapture__DomPropsMixin = const PropDescriptor(_$key__onPasteCapture__DomPropsMixin), _$prop__onKeyDownCapture__DomPropsMixin = const PropDescriptor(_$key__onKeyDownCapture__DomPropsMixin), _$prop__onKeyPressCapture__DomPropsMixin = const PropDescriptor(_$key__onKeyPressCapture__DomPropsMixin), _$prop__onKeyUpCapture__DomPropsMixin = const PropDescriptor(_$key__onKeyUpCapture__DomPropsMixin), _$prop__onFocusCapture__DomPropsMixin = const PropDescriptor(_$key__onFocusCapture__DomPropsMixin), _$prop__onBlurCapture__DomPropsMixin = const PropDescriptor(_$key__onBlurCapture__DomPropsMixin), _$prop__onChangeCapture__DomPropsMixin = const PropDescriptor(_$key__onChangeCapture__DomPropsMixin), _$prop__onInputCapture__DomPropsMixin = const PropDescriptor(_$key__onInputCapture__DomPropsMixin), _$prop__onSubmitCapture__DomPropsMixin = const PropDescriptor(_$key__onSubmitCapture__DomPropsMixin), _$prop__onResetCapture__DomPropsMixin = const PropDescriptor(_$key__onResetCapture__DomPropsMixin), _$prop__onClickCapture__DomPropsMixin = const PropDescriptor(_$key__onClickCapture__DomPropsMixin), _$prop__onContextMenuCapture__DomPropsMixin = const PropDescriptor(_$key__onContextMenuCapture__DomPropsMixin), _$prop__onDoubleClickCapture__DomPropsMixin = const PropDescriptor(_$key__onDoubleClickCapture__DomPropsMixin), _$prop__onDragCapture__DomPropsMixin = const PropDescriptor(_$key__onDragCapture__DomPropsMixin), _$prop__onDragEndCapture__DomPropsMixin = const PropDescriptor(_$key__onDragEndCapture__DomPropsMixin), _$prop__onDragEnterCapture__DomPropsMixin = const PropDescriptor(_$key__onDragEnterCapture__DomPropsMixin), _$prop__onDragExitCapture__DomPropsMixin = const PropDescriptor(_$key__onDragExitCapture__DomPropsMixin), _$prop__onDragLeaveCapture__DomPropsMixin = const PropDescriptor(_$key__onDragLeaveCapture__DomPropsMixin), _$prop__onDragOverCapture__DomPropsMixin = const PropDescriptor(_$key__onDragOverCapture__DomPropsMixin), _$prop__onDragStartCapture__DomPropsMixin = const PropDescriptor(_$key__onDragStartCapture__DomPropsMixin), _$prop__onDropCapture__DomPropsMixin = const PropDescriptor(_$key__onDropCapture__DomPropsMixin), _$prop__onMouseDownCapture__DomPropsMixin = const PropDescriptor(_$key__onMouseDownCapture__DomPropsMixin), _$prop__onMouseEnterCapture__DomPropsMixin = const PropDescriptor(_$key__onMouseEnterCapture__DomPropsMixin), _$prop__onMouseLeaveCapture__DomPropsMixin = const PropDescriptor(_$key__onMouseLeaveCapture__DomPropsMixin), _$prop__onMouseMoveCapture__DomPropsMixin = const PropDescriptor(_$key__onMouseMoveCapture__DomPropsMixin), _$prop__onMouseOutCapture__DomPropsMixin = const PropDescriptor(_$key__onMouseOutCapture__DomPropsMixin), _$prop__onMouseOverCapture__DomPropsMixin = const PropDescriptor(_$key__onMouseOverCapture__DomPropsMixin), _$prop__onMouseUpCapture__DomPropsMixin = const PropDescriptor(_$key__onMouseUpCapture__DomPropsMixin), _$prop__onTouchCancelCapture__DomPropsMixin = const PropDescriptor(_$key__onTouchCancelCapture__DomPropsMixin), _$prop__onTouchEndCapture__DomPropsMixin = const PropDescriptor(_$key__onTouchEndCapture__DomPropsMixin), _$prop__onTouchMoveCapture__DomPropsMixin = const PropDescriptor(_$key__onTouchMoveCapture__DomPropsMixin), _$prop__onTouchStartCapture__DomPropsMixin = const PropDescriptor(_$key__onTouchStartCapture__DomPropsMixin), _$prop__onScrollCapture__DomPropsMixin = const PropDescriptor(_$key__onScrollCapture__DomPropsMixin), _$prop__onWheelCapture__DomPropsMixin = const PropDescriptor(_$key__onWheelCapture__DomPropsMixin), _$prop__defaultChecked__DomPropsMixin = const PropDescriptor(_$key__defaultChecked__DomPropsMixin), _$prop__defaultValue__DomPropsMixin = const PropDescriptor(_$key__defaultValue__DomPropsMixin), _$prop__autoFocus__DomPropsMixin = const PropDescriptor(_$key__autoFocus__DomPropsMixin); static const List<PropDescriptor> $props = const [_$prop__cols__DomPropsMixin, _$prop__rows__DomPropsMixin, _$prop__size__DomPropsMixin, _$prop__span__DomPropsMixin, _$prop__start__DomPropsMixin, _$prop__allowFullScreen__DomPropsMixin, _$prop__async__DomPropsMixin, _$prop__autoPlay__DomPropsMixin, _$prop__checked__DomPropsMixin, _$prop__controls__DomPropsMixin, _$prop__defer__DomPropsMixin, _$prop__disabled__DomPropsMixin, _$prop__formNoValidate__DomPropsMixin, _$prop__hidden__DomPropsMixin, _$prop__loop__DomPropsMixin, _$prop__multiple__DomPropsMixin, _$prop__muted__DomPropsMixin, _$prop__noValidate__DomPropsMixin, _$prop__readOnly__DomPropsMixin, _$prop__required__DomPropsMixin, _$prop__seamless__DomPropsMixin, _$prop__selected__DomPropsMixin, _$prop__style__DomPropsMixin, _$prop__className__DomPropsMixin, _$prop__title__DomPropsMixin, _$prop__id__DomPropsMixin, _$prop__accept__DomPropsMixin, _$prop__acceptCharset__DomPropsMixin, _$prop__accessKey__DomPropsMixin, _$prop__action__DomPropsMixin, _$prop__allowTransparency__DomPropsMixin, _$prop__alt__DomPropsMixin, _$prop__autoComplete__DomPropsMixin, _$prop__cellPadding__DomPropsMixin, _$prop__cellSpacing__DomPropsMixin, _$prop__charSet__DomPropsMixin, _$prop__classID__DomPropsMixin, _$prop__colSpan__DomPropsMixin, _$prop__content__DomPropsMixin, _$prop__contentEditable__DomPropsMixin, _$prop__contextMenu__DomPropsMixin, _$prop__coords__DomPropsMixin, _$prop__crossOrigin__DomPropsMixin, _$prop__data__DomPropsMixin, _$prop__dateTime__DomPropsMixin, _$prop__dir__DomPropsMixin, _$prop__download__DomPropsMixin, _$prop__draggable__DomPropsMixin, _$prop__encType__DomPropsMixin, _$prop__form__DomPropsMixin, _$prop__frameBorder__DomPropsMixin, _$prop__height__DomPropsMixin, _$prop__href__DomPropsMixin, _$prop__hrefLang__DomPropsMixin, _$prop__htmlFor__DomPropsMixin, _$prop__httpEquiv__DomPropsMixin, _$prop__icon__DomPropsMixin, _$prop__label__DomPropsMixin, _$prop__lang__DomPropsMixin, _$prop__list__DomPropsMixin, _$prop__manifest__DomPropsMixin, _$prop__max__DomPropsMixin, _$prop__maxLength__DomPropsMixin, _$prop__media__DomPropsMixin, _$prop__mediaGroup__DomPropsMixin, _$prop__method__DomPropsMixin, _$prop__min__DomPropsMixin, _$prop__name__DomPropsMixin, _$prop__open__DomPropsMixin, _$prop__pattern__DomPropsMixin, _$prop__placeholder__DomPropsMixin, _$prop__poster__DomPropsMixin, _$prop__preload__DomPropsMixin, _$prop__radioGroup__DomPropsMixin, _$prop__rel__DomPropsMixin, _$prop__role__DomPropsMixin, _$prop__rowSpan__DomPropsMixin, _$prop__sandbox__DomPropsMixin, _$prop__scope__DomPropsMixin, _$prop__scrolling__DomPropsMixin, _$prop__shape__DomPropsMixin, _$prop__sizes__DomPropsMixin, _$prop__spellCheck__DomPropsMixin, _$prop__src__DomPropsMixin, _$prop__srcDoc__DomPropsMixin, _$prop__srcSet__DomPropsMixin, _$prop__step__DomPropsMixin, _$prop__tabIndex__DomPropsMixin, _$prop__target__DomPropsMixin, _$prop__type__DomPropsMixin, _$prop__useMap__DomPropsMixin, _$prop__value__DomPropsMixin, _$prop__width__DomPropsMixin, _$prop__wmode__DomPropsMixin, _$prop__onCopy__DomPropsMixin, _$prop__onCut__DomPropsMixin, _$prop__onPaste__DomPropsMixin, _$prop__onKeyDown__DomPropsMixin, _$prop__onKeyPress__DomPropsMixin, _$prop__onKeyUp__DomPropsMixin, _$prop__onFocus__DomPropsMixin, _$prop__onBlur__DomPropsMixin, _$prop__onChange__DomPropsMixin, _$prop__onInput__DomPropsMixin, _$prop__onSubmit__DomPropsMixin, _$prop__onReset__DomPropsMixin, _$prop__onClick__DomPropsMixin, _$prop__onContextMenu__DomPropsMixin, _$prop__onDoubleClick__DomPropsMixin, _$prop__onDrag__DomPropsMixin, _$prop__onDragEnd__DomPropsMixin, _$prop__onDragEnter__DomPropsMixin, _$prop__onDragExit__DomPropsMixin, _$prop__onDragLeave__DomPropsMixin, _$prop__onDragOver__DomPropsMixin, _$prop__onDragStart__DomPropsMixin, _$prop__onDrop__DomPropsMixin, _$prop__onMouseDown__DomPropsMixin, _$prop__onMouseEnter__DomPropsMixin, _$prop__onMouseLeave__DomPropsMixin, _$prop__onMouseMove__DomPropsMixin, _$prop__onMouseOut__DomPropsMixin, _$prop__onMouseOver__DomPropsMixin, _$prop__onMouseUp__DomPropsMixin, _$prop__onTouchCancel__DomPropsMixin, _$prop__onTouchEnd__DomPropsMixin, _$prop__onTouchMove__DomPropsMixin, _$prop__onTouchStart__DomPropsMixin, _$prop__onScroll__DomPropsMixin, _$prop__onWheel__DomPropsMixin, _$prop__onCopyCapture__DomPropsMixin, _$prop__onCutCapture__DomPropsMixin, _$prop__onPasteCapture__DomPropsMixin, _$prop__onKeyDownCapture__DomPropsMixin, _$prop__onKeyPressCapture__DomPropsMixin, _$prop__onKeyUpCapture__DomPropsMixin, _$prop__onFocusCapture__DomPropsMixin, _$prop__onBlurCapture__DomPropsMixin, _$prop__onChangeCapture__DomPropsMixin, _$prop__onInputCapture__DomPropsMixin, _$prop__onSubmitCapture__DomPropsMixin, _$prop__onResetCapture__DomPropsMixin, _$prop__onClickCapture__DomPropsMixin, _$prop__onContextMenuCapture__DomPropsMixin, _$prop__onDoubleClickCapture__DomPropsMixin, _$prop__onDragCapture__DomPropsMixin, _$prop__onDragEndCapture__DomPropsMixin, _$prop__onDragEnterCapture__DomPropsMixin, _$prop__onDragExitCapture__DomPropsMixin, _$prop__onDragLeaveCapture__DomPropsMixin, _$prop__onDragOverCapture__DomPropsMixin, _$prop__onDragStartCapture__DomPropsMixin, _$prop__onDropCapture__DomPropsMixin, _$prop__onMouseDownCapture__DomPropsMixin, _$prop__onMouseEnterCapture__DomPropsMixin, _$prop__onMouseLeaveCapture__DomPropsMixin, _$prop__onMouseMoveCapture__DomPropsMixin, _$prop__onMouseOutCapture__DomPropsMixin, _$prop__onMouseOverCapture__DomPropsMixin, _$prop__onMouseUpCapture__DomPropsMixin, _$prop__onTouchCancelCapture__DomPropsMixin, _$prop__onTouchEndCapture__DomPropsMixin, _$prop__onTouchMoveCapture__DomPropsMixin, _$prop__onTouchStartCapture__DomPropsMixin, _$prop__onScrollCapture__DomPropsMixin, _$prop__onWheelCapture__DomPropsMixin, _$prop__defaultChecked__DomPropsMixin, _$prop__defaultValue__DomPropsMixin, _$prop__autoFocus__DomPropsMixin]; static const String _$key__cols__DomPropsMixin = 'cols', _$key__rows__DomPropsMixin = 'rows', _$key__size__DomPropsMixin = 'size', _$key__span__DomPropsMixin = 'span', _$key__start__DomPropsMixin = 'start', _$key__allowFullScreen__DomPropsMixin = 'allowFullScreen', _$key__async__DomPropsMixin = 'async', _$key__autoPlay__DomPropsMixin = 'autoPlay', _$key__checked__DomPropsMixin = 'checked', _$key__controls__DomPropsMixin = 'controls', _$key__defer__DomPropsMixin = 'defer', _$key__disabled__DomPropsMixin = 'disabled', _$key__formNoValidate__DomPropsMixin = 'formNoValidate', _$key__hidden__DomPropsMixin = 'hidden', _$key__loop__DomPropsMixin = 'loop', _$key__multiple__DomPropsMixin = 'multiple', _$key__muted__DomPropsMixin = 'muted', _$key__noValidate__DomPropsMixin = 'noValidate', _$key__readOnly__DomPropsMixin = 'readOnly', _$key__required__DomPropsMixin = 'required', _$key__seamless__DomPropsMixin = 'seamless', _$key__selected__DomPropsMixin = 'selected', _$key__style__DomPropsMixin = 'style', _$key__className__DomPropsMixin = 'className', _$key__title__DomPropsMixin = 'title', _$key__id__DomPropsMixin = 'id', _$key__accept__DomPropsMixin = 'accept', _$key__acceptCharset__DomPropsMixin = 'acceptCharset', _$key__accessKey__DomPropsMixin = 'accessKey', _$key__action__DomPropsMixin = 'action', _$key__allowTransparency__DomPropsMixin = 'allowTransparency', _$key__alt__DomPropsMixin = 'alt', _$key__autoComplete__DomPropsMixin = 'autoComplete', _$key__cellPadding__DomPropsMixin = 'cellPadding', _$key__cellSpacing__DomPropsMixin = 'cellSpacing', _$key__charSet__DomPropsMixin = 'charSet', _$key__classID__DomPropsMixin = 'classID', _$key__colSpan__DomPropsMixin = 'colSpan', _$key__content__DomPropsMixin = 'content', _$key__contentEditable__DomPropsMixin = 'contentEditable', _$key__contextMenu__DomPropsMixin = 'contextMenu', _$key__coords__DomPropsMixin = 'coords', _$key__crossOrigin__DomPropsMixin = 'crossOrigin', _$key__data__DomPropsMixin = 'data', _$key__dateTime__DomPropsMixin = 'dateTime', _$key__dir__DomPropsMixin = 'dir', _$key__download__DomPropsMixin = 'download', _$key__draggable__DomPropsMixin = 'draggable', _$key__encType__DomPropsMixin = 'encType', _$key__form__DomPropsMixin = 'form', _$key__frameBorder__DomPropsMixin = 'frameBorder', _$key__height__DomPropsMixin = 'height', _$key__href__DomPropsMixin = 'href', _$key__hrefLang__DomPropsMixin = 'hrefLang', _$key__htmlFor__DomPropsMixin = 'htmlFor', _$key__httpEquiv__DomPropsMixin = 'httpEquiv', _$key__icon__DomPropsMixin = 'icon', _$key__label__DomPropsMixin = 'label', _$key__lang__DomPropsMixin = 'lang', _$key__list__DomPropsMixin = 'list', _$key__manifest__DomPropsMixin = 'manifest', _$key__max__DomPropsMixin = 'max', _$key__maxLength__DomPropsMixin = 'maxLength', _$key__media__DomPropsMixin = 'media', _$key__mediaGroup__DomPropsMixin = 'mediaGroup', _$key__method__DomPropsMixin = 'method', _$key__min__DomPropsMixin = 'min', _$key__name__DomPropsMixin = 'name', _$key__open__DomPropsMixin = 'open', _$key__pattern__DomPropsMixin = 'pattern', _$key__placeholder__DomPropsMixin = 'placeholder', _$key__poster__DomPropsMixin = 'poster', _$key__preload__DomPropsMixin = 'preload', _$key__radioGroup__DomPropsMixin = 'radioGroup', _$key__rel__DomPropsMixin = 'rel', _$key__role__DomPropsMixin = 'role', _$key__rowSpan__DomPropsMixin = 'rowSpan', _$key__sandbox__DomPropsMixin = 'sandbox', _$key__scope__DomPropsMixin = 'scope', _$key__scrolling__DomPropsMixin = 'scrolling', _$key__shape__DomPropsMixin = 'shape', _$key__sizes__DomPropsMixin = 'sizes', _$key__spellCheck__DomPropsMixin = 'spellCheck', _$key__src__DomPropsMixin = 'src', _$key__srcDoc__DomPropsMixin = 'srcDoc', _$key__srcSet__DomPropsMixin = 'srcSet', _$key__step__DomPropsMixin = 'step', _$key__tabIndex__DomPropsMixin = 'tabIndex', _$key__target__DomPropsMixin = 'target', _$key__type__DomPropsMixin = 'type', _$key__useMap__DomPropsMixin = 'useMap', _$key__value__DomPropsMixin = 'value', _$key__width__DomPropsMixin = 'width', _$key__wmode__DomPropsMixin = 'wmode', _$key__onCopy__DomPropsMixin = 'onCopy', _$key__onCut__DomPropsMixin = 'onCut', _$key__onPaste__DomPropsMixin = 'onPaste', _$key__onKeyDown__DomPropsMixin = 'onKeyDown', _$key__onKeyPress__DomPropsMixin = 'onKeyPress', _$key__onKeyUp__DomPropsMixin = 'onKeyUp', _$key__onFocus__DomPropsMixin = 'onFocus', _$key__onBlur__DomPropsMixin = 'onBlur', _$key__onChange__DomPropsMixin = 'onChange', _$key__onInput__DomPropsMixin = 'onInput', _$key__onSubmit__DomPropsMixin = 'onSubmit', _$key__onReset__DomPropsMixin = 'onReset', _$key__onClick__DomPropsMixin = 'onClick', _$key__onContextMenu__DomPropsMixin = 'onContextMenu', _$key__onDoubleClick__DomPropsMixin = 'onDoubleClick', _$key__onDrag__DomPropsMixin = 'onDrag', _$key__onDragEnd__DomPropsMixin = 'onDragEnd', _$key__onDragEnter__DomPropsMixin = 'onDragEnter', _$key__onDragExit__DomPropsMixin = 'onDragExit', _$key__onDragLeave__DomPropsMixin = 'onDragLeave', _$key__onDragOver__DomPropsMixin = 'onDragOver', _$key__onDragStart__DomPropsMixin = 'onDragStart', _$key__onDrop__DomPropsMixin = 'onDrop', _$key__onMouseDown__DomPropsMixin = 'onMouseDown', _$key__onMouseEnter__DomPropsMixin = 'onMouseEnter', _$key__onMouseLeave__DomPropsMixin = 'onMouseLeave', _$key__onMouseMove__DomPropsMixin = 'onMouseMove', _$key__onMouseOut__DomPropsMixin = 'onMouseOut', _$key__onMouseOver__DomPropsMixin = 'onMouseOver', _$key__onMouseUp__DomPropsMixin = 'onMouseUp', _$key__onTouchCancel__DomPropsMixin = 'onTouchCancel', _$key__onTouchEnd__DomPropsMixin = 'onTouchEnd', _$key__onTouchMove__DomPropsMixin = 'onTouchMove', _$key__onTouchStart__DomPropsMixin = 'onTouchStart', _$key__onScroll__DomPropsMixin = 'onScroll', _$key__onWheel__DomPropsMixin = 'onWheel', _$key__onCopyCapture__DomPropsMixin = 'onCopyCapture', _$key__onCutCapture__DomPropsMixin = 'onCutCapture', _$key__onPasteCapture__DomPropsMixin = 'onPasteCapture', _$key__onKeyDownCapture__DomPropsMixin = 'onKeyDownCapture', _$key__onKeyPressCapture__DomPropsMixin = 'onKeyPressCapture', _$key__onKeyUpCapture__DomPropsMixin = 'onKeyUpCapture', _$key__onFocusCapture__DomPropsMixin = 'onFocusCapture', _$key__onBlurCapture__DomPropsMixin = 'onBlurCapture', _$key__onChangeCapture__DomPropsMixin = 'onChangeCapture', _$key__onInputCapture__DomPropsMixin = 'onInputCapture', _$key__onSubmitCapture__DomPropsMixin = 'onSubmitCapture', _$key__onResetCapture__DomPropsMixin = 'onResetCapture', _$key__onClickCapture__DomPropsMixin = 'onClickCapture', _$key__onContextMenuCapture__DomPropsMixin = 'onContextMenuCapture', _$key__onDoubleClickCapture__DomPropsMixin = 'onDoubleClickCapture', _$key__onDragCapture__DomPropsMixin = 'onDragCapture', _$key__onDragEndCapture__DomPropsMixin = 'onDragEndCapture', _$key__onDragEnterCapture__DomPropsMixin = 'onDragEnterCapture', _$key__onDragExitCapture__DomPropsMixin = 'onDragExitCapture', _$key__onDragLeaveCapture__DomPropsMixin = 'onDragLeaveCapture', _$key__onDragOverCapture__DomPropsMixin = 'onDragOverCapture', _$key__onDragStartCapture__DomPropsMixin = 'onDragStartCapture', _$key__onDropCapture__DomPropsMixin = 'onDropCapture', _$key__onMouseDownCapture__DomPropsMixin = 'onMouseDownCapture', _$key__onMouseEnterCapture__DomPropsMixin = 'onMouseEnterCapture', _$key__onMouseLeaveCapture__DomPropsMixin = 'onMouseLeaveCapture', _$key__onMouseMoveCapture__DomPropsMixin = 'onMouseMoveCapture', _$key__onMouseOutCapture__DomPropsMixin = 'onMouseOutCapture', _$key__onMouseOverCapture__DomPropsMixin = 'onMouseOverCapture', _$key__onMouseUpCapture__DomPropsMixin = 'onMouseUpCapture', _$key__onTouchCancelCapture__DomPropsMixin = 'onTouchCancelCapture', _$key__onTouchEndCapture__DomPropsMixin = 'onTouchEndCapture', _$key__onTouchMoveCapture__DomPropsMixin = 'onTouchMoveCapture', _$key__onTouchStartCapture__DomPropsMixin = 'onTouchStartCapture', _$key__onScrollCapture__DomPropsMixin = 'onScrollCapture', _$key__onWheelCapture__DomPropsMixin = 'onWheelCapture', _$key__defaultChecked__DomPropsMixin = 'defaultChecked', _$key__defaultValue__DomPropsMixin = 'defaultValue', _$key__autoFocus__DomPropsMixin = 'autoFocus'; static const List<String> $propKeys = const [_$key__cols__DomPropsMixin, _$key__rows__DomPropsMixin, _$key__size__DomPropsMixin, _$key__span__DomPropsMixin, _$key__start__DomPropsMixin, _$key__allowFullScreen__DomPropsMixin, _$key__async__DomPropsMixin, _$key__autoPlay__DomPropsMixin, _$key__checked__DomPropsMixin, _$key__controls__DomPropsMixin, _$key__defer__DomPropsMixin, _$key__disabled__DomPropsMixin, _$key__formNoValidate__DomPropsMixin, _$key__hidden__DomPropsMixin, _$key__loop__DomPropsMixin, _$key__multiple__DomPropsMixin, _$key__muted__DomPropsMixin, _$key__noValidate__DomPropsMixin, _$key__readOnly__DomPropsMixin, _$key__required__DomPropsMixin, _$key__seamless__DomPropsMixin, _$key__selected__DomPropsMixin, _$key__style__DomPropsMixin, _$key__className__DomPropsMixin, _$key__title__DomPropsMixin, _$key__id__DomPropsMixin, _$key__accept__DomPropsMixin, _$key__acceptCharset__DomPropsMixin, _$key__accessKey__DomPropsMixin, _$key__action__DomPropsMixin, _$key__allowTransparency__DomPropsMixin, _$key__alt__DomPropsMixin, _$key__autoComplete__DomPropsMixin, _$key__cellPadding__DomPropsMixin, _$key__cellSpacing__DomPropsMixin, _$key__charSet__DomPropsMixin, _$key__classID__DomPropsMixin, _$key__colSpan__DomPropsMixin, _$key__content__DomPropsMixin, _$key__contentEditable__DomPropsMixin, _$key__contextMenu__DomPropsMixin, _$key__coords__DomPropsMixin, _$key__crossOrigin__DomPropsMixin, _$key__data__DomPropsMixin, _$key__dateTime__DomPropsMixin, _$key__dir__DomPropsMixin, _$key__download__DomPropsMixin, _$key__draggable__DomPropsMixin, _$key__encType__DomPropsMixin, _$key__form__DomPropsMixin, _$key__frameBorder__DomPropsMixin, _$key__height__DomPropsMixin, _$key__href__DomPropsMixin, _$key__hrefLang__DomPropsMixin, _$key__htmlFor__DomPropsMixin, _$key__httpEquiv__DomPropsMixin, _$key__icon__DomPropsMixin, _$key__label__DomPropsMixin, _$key__lang__DomPropsMixin, _$key__list__DomPropsMixin, _$key__manifest__DomPropsMixin, _$key__max__DomPropsMixin, _$key__maxLength__DomPropsMixin, _$key__media__DomPropsMixin, _$key__mediaGroup__DomPropsMixin, _$key__method__DomPropsMixin, _$key__min__DomPropsMixin, _$key__name__DomPropsMixin, _$key__open__DomPropsMixin, _$key__pattern__DomPropsMixin, _$key__placeholder__DomPropsMixin, _$key__poster__DomPropsMixin, _$key__preload__DomPropsMixin, _$key__radioGroup__DomPropsMixin, _$key__rel__DomPropsMixin, _$key__role__DomPropsMixin, _$key__rowSpan__DomPropsMixin, _$key__sandbox__DomPropsMixin, _$key__scope__DomPropsMixin, _$key__scrolling__DomPropsMixin, _$key__shape__DomPropsMixin, _$key__sizes__DomPropsMixin, _$key__spellCheck__DomPropsMixin, _$key__src__DomPropsMixin, _$key__srcDoc__DomPropsMixin, _$key__srcSet__DomPropsMixin, _$key__step__DomPropsMixin, _$key__tabIndex__DomPropsMixin, _$key__target__DomPropsMixin, _$key__type__DomPropsMixin, _$key__useMap__DomPropsMixin, _$key__value__DomPropsMixin, _$key__width__DomPropsMixin, _$key__wmode__DomPropsMixin, _$key__onCopy__DomPropsMixin, _$key__onCut__DomPropsMixin, _$key__onPaste__DomPropsMixin, _$key__onKeyDown__DomPropsMixin, _$key__onKeyPress__DomPropsMixin, _$key__onKeyUp__DomPropsMixin, _$key__onFocus__DomPropsMixin, _$key__onBlur__DomPropsMixin, _$key__onChange__DomPropsMixin, _$key__onInput__DomPropsMixin, _$key__onSubmit__DomPropsMixin, _$key__onReset__DomPropsMixin, _$key__onClick__DomPropsMixin, _$key__onContextMenu__DomPropsMixin, _$key__onDoubleClick__DomPropsMixin, _$key__onDrag__DomPropsMixin, _$key__onDragEnd__DomPropsMixin, _$key__onDragEnter__DomPropsMixin, _$key__onDragExit__DomPropsMixin, _$key__onDragLeave__DomPropsMixin, _$key__onDragOver__DomPropsMixin, _$key__onDragStart__DomPropsMixin, _$key__onDrop__DomPropsMixin, _$key__onMouseDown__DomPropsMixin, _$key__onMouseEnter__DomPropsMixin, _$key__onMouseLeave__DomPropsMixin, _$key__onMouseMove__DomPropsMixin, _$key__onMouseOut__DomPropsMixin, _$key__onMouseOver__DomPropsMixin, _$key__onMouseUp__DomPropsMixin, _$key__onTouchCancel__DomPropsMixin, _$key__onTouchEnd__DomPropsMixin, _$key__onTouchMove__DomPropsMixin, _$key__onTouchStart__DomPropsMixin, _$key__onScroll__DomPropsMixin, _$key__onWheel__DomPropsMixin, _$key__onCopyCapture__DomPropsMixin, _$key__onCutCapture__DomPropsMixin, _$key__onPasteCapture__DomPropsMixin, _$key__onKeyDownCapture__DomPropsMixin, _$key__onKeyPressCapture__DomPropsMixin, _$key__onKeyUpCapture__DomPropsMixin, _$key__onFocusCapture__DomPropsMixin, _$key__onBlurCapture__DomPropsMixin, _$key__onChangeCapture__DomPropsMixin, _$key__onInputCapture__DomPropsMixin, _$key__onSubmitCapture__DomPropsMixin, _$key__onResetCapture__DomPropsMixin, _$key__onClickCapture__DomPropsMixin, _$key__onContextMenuCapture__DomPropsMixin, _$key__onDoubleClickCapture__DomPropsMixin, _$key__onDragCapture__DomPropsMixin, _$key__onDragEndCapture__DomPropsMixin, _$key__onDragEnterCapture__DomPropsMixin, _$key__onDragExitCapture__DomPropsMixin, _$key__onDragLeaveCapture__DomPropsMixin, _$key__onDragOverCapture__DomPropsMixin, _$key__onDragStartCapture__DomPropsMixin, _$key__onDropCapture__DomPropsMixin, _$key__onMouseDownCapture__DomPropsMixin, _$key__onMouseEnterCapture__DomPropsMixin, _$key__onMouseLeaveCapture__DomPropsMixin, _$key__onMouseMoveCapture__DomPropsMixin, _$key__onMouseOutCapture__DomPropsMixin, _$key__onMouseOverCapture__DomPropsMixin, _$key__onMouseUpCapture__DomPropsMixin, _$key__onTouchCancelCapture__DomPropsMixin, _$key__onTouchEndCapture__DomPropsMixin, _$key__onTouchMoveCapture__DomPropsMixin, _$key__onTouchStartCapture__DomPropsMixin, _$key__onScrollCapture__DomPropsMixin, _$key__onWheelCapture__DomPropsMixin, _$key__defaultChecked__DomPropsMixin, _$key__defaultValue__DomPropsMixin, _$key__autoFocus__DomPropsMixin]; 
  Map get props;

  int get cols => props[_$key__cols__DomPropsMixin];  set cols(int value) => props[_$key__cols__DomPropsMixin] = value;int get rows => props[_$key__rows__DomPropsMixin];  set rows(int value) => props[_$key__rows__DomPropsMixin] = value;int get size => props[_$key__size__DomPropsMixin];  set size(int value) => props[_$key__size__DomPropsMixin] = value;int get span => props[_$key__span__DomPropsMixin];  set span(int value) => props[_$key__span__DomPropsMixin] = value;int get start => props[_$key__start__DomPropsMixin];  set start(int value) => props[_$key__start__DomPropsMixin] = value;

  bool get allowFullScreen => props[_$key__allowFullScreen__DomPropsMixin];  set allowFullScreen(bool value) => props[_$key__allowFullScreen__DomPropsMixin] = value;bool get async => props[_$key__async__DomPropsMixin];  set async(bool value) => props[_$key__async__DomPropsMixin] = value;bool get autoPlay => props[_$key__autoPlay__DomPropsMixin];  set autoPlay(bool value) => props[_$key__autoPlay__DomPropsMixin] = value;bool get checked => props[_$key__checked__DomPropsMixin];  set checked(bool value) => props[_$key__checked__DomPropsMixin] = value;bool get controls => props[_$key__controls__DomPropsMixin];  set controls(bool value) => props[_$key__controls__DomPropsMixin] = value;bool get defer => props[_$key__defer__DomPropsMixin];  set defer(bool value) => props[_$key__defer__DomPropsMixin] = value;bool get disabled => props[_$key__disabled__DomPropsMixin];  set disabled(bool value) => props[_$key__disabled__DomPropsMixin] = value;bool get formNoValidate => props[_$key__formNoValidate__DomPropsMixin];  set formNoValidate(bool value) => props[_$key__formNoValidate__DomPropsMixin] = value;bool get hidden => props[_$key__hidden__DomPropsMixin];  set hidden(bool value) => props[_$key__hidden__DomPropsMixin] = value;bool get loop => props[_$key__loop__DomPropsMixin];  set loop(bool value) => props[_$key__loop__DomPropsMixin] = value;bool get multiple => props[_$key__multiple__DomPropsMixin];  set multiple(bool value) => props[_$key__multiple__DomPropsMixin] = value;
bool get muted => props[_$key__muted__DomPropsMixin];  set muted(bool value) => props[_$key__muted__DomPropsMixin] = value;bool get noValidate => props[_$key__noValidate__DomPropsMixin];  set noValidate(bool value) => props[_$key__noValidate__DomPropsMixin] = value;bool get readOnly => props[_$key__readOnly__DomPropsMixin];  set readOnly(bool value) => props[_$key__readOnly__DomPropsMixin] = value;bool get required => props[_$key__required__DomPropsMixin];  set required(bool value) => props[_$key__required__DomPropsMixin] = value;bool get seamless => props[_$key__seamless__DomPropsMixin];  set seamless(bool value) => props[_$key__seamless__DomPropsMixin] = value;bool get selected => props[_$key__selected__DomPropsMixin];  set selected(bool value) => props[_$key__selected__DomPropsMixin] = value;

  Map<String, dynamic> get style => props[_$key__style__DomPropsMixin];  set style(Map<String, dynamic> value) => props[_$key__style__DomPropsMixin] = value;

  String get className => props[_$key__className__DomPropsMixin];  set className(String value) => props[_$key__className__DomPropsMixin] = value;String get title => props[_$key__title__DomPropsMixin];  set title(String value) => props[_$key__title__DomPropsMixin] = value;String get id => props[_$key__id__DomPropsMixin];  set id(String value) => props[_$key__id__DomPropsMixin] = value;

  dynamic get accept => props[_$key__accept__DomPropsMixin];  set accept(dynamic value) => props[_$key__accept__DomPropsMixin] = value;dynamic get acceptCharset => props[_$key__acceptCharset__DomPropsMixin];  set acceptCharset(dynamic value) => props[_$key__acceptCharset__DomPropsMixin] = value;dynamic get accessKey => props[_$key__accessKey__DomPropsMixin];  set accessKey(dynamic value) => props[_$key__accessKey__DomPropsMixin] = value;dynamic get action => props[_$key__action__DomPropsMixin];  set action(dynamic value) => props[_$key__action__DomPropsMixin] = value;dynamic get allowTransparency => props[_$key__allowTransparency__DomPropsMixin];  set allowTransparency(dynamic value) => props[_$key__allowTransparency__DomPropsMixin] = value;dynamic get alt => props[_$key__alt__DomPropsMixin];  set alt(dynamic value) => props[_$key__alt__DomPropsMixin] = value;dynamic get autoComplete => props[_$key__autoComplete__DomPropsMixin];  set autoComplete(dynamic value) => props[_$key__autoComplete__DomPropsMixin] = value;dynamic get cellPadding => props[_$key__cellPadding__DomPropsMixin];  set cellPadding(dynamic value) => props[_$key__cellPadding__DomPropsMixin] = value;dynamic get cellSpacing => props[_$key__cellSpacing__DomPropsMixin];  set cellSpacing(dynamic value) => props[_$key__cellSpacing__DomPropsMixin] = value;
dynamic get charSet => props[_$key__charSet__DomPropsMixin];  set charSet(dynamic value) => props[_$key__charSet__DomPropsMixin] = value;dynamic get classID => props[_$key__classID__DomPropsMixin];  set classID(dynamic value) => props[_$key__classID__DomPropsMixin] = value;dynamic get colSpan => props[_$key__colSpan__DomPropsMixin];  set colSpan(dynamic value) => props[_$key__colSpan__DomPropsMixin] = value;dynamic get content => props[_$key__content__DomPropsMixin];  set content(dynamic value) => props[_$key__content__DomPropsMixin] = value;dynamic get contentEditable => props[_$key__contentEditable__DomPropsMixin];  set contentEditable(dynamic value) => props[_$key__contentEditable__DomPropsMixin] = value;dynamic get contextMenu => props[_$key__contextMenu__DomPropsMixin];  set contextMenu(dynamic value) => props[_$key__contextMenu__DomPropsMixin] = value;dynamic get coords => props[_$key__coords__DomPropsMixin];  set coords(dynamic value) => props[_$key__coords__DomPropsMixin] = value;dynamic get crossOrigin => props[_$key__crossOrigin__DomPropsMixin];  set crossOrigin(dynamic value) => props[_$key__crossOrigin__DomPropsMixin] = value;dynamic get data => props[_$key__data__DomPropsMixin];  set data(dynamic value) => props[_$key__data__DomPropsMixin] = value;dynamic get dateTime => props[_$key__dateTime__DomPropsMixin];  set dateTime(dynamic value) => props[_$key__dateTime__DomPropsMixin] = value;
dynamic get dir => props[_$key__dir__DomPropsMixin];  set dir(dynamic value) => props[_$key__dir__DomPropsMixin] = value;dynamic get download => props[_$key__download__DomPropsMixin];  set download(dynamic value) => props[_$key__download__DomPropsMixin] = value;dynamic get draggable => props[_$key__draggable__DomPropsMixin];  set draggable(dynamic value) => props[_$key__draggable__DomPropsMixin] = value;dynamic get encType => props[_$key__encType__DomPropsMixin];  set encType(dynamic value) => props[_$key__encType__DomPropsMixin] = value;dynamic get form => props[_$key__form__DomPropsMixin];  set form(dynamic value) => props[_$key__form__DomPropsMixin] = value;dynamic get frameBorder => props[_$key__frameBorder__DomPropsMixin];  set frameBorder(dynamic value) => props[_$key__frameBorder__DomPropsMixin] = value;dynamic get height => props[_$key__height__DomPropsMixin];  set height(dynamic value) => props[_$key__height__DomPropsMixin] = value;dynamic get href => props[_$key__href__DomPropsMixin];  set href(dynamic value) => props[_$key__href__DomPropsMixin] = value;dynamic get hrefLang => props[_$key__hrefLang__DomPropsMixin];  set hrefLang(dynamic value) => props[_$key__hrefLang__DomPropsMixin] = value;dynamic get htmlFor => props[_$key__htmlFor__DomPropsMixin];  set htmlFor(dynamic value) => props[_$key__htmlFor__DomPropsMixin] = value;dynamic get httpEquiv => props[_$key__httpEquiv__DomPropsMixin];  set httpEquiv(dynamic value) => props[_$key__httpEquiv__DomPropsMixin] = value;dynamic get icon => props[_$key__icon__DomPropsMixin];  set icon(dynamic value) => props[_$key__icon__DomPropsMixin] = value;dynamic get label => props[_$key__label__DomPropsMixin];  set label(dynamic value) => props[_$key__label__DomPropsMixin] = value;
dynamic get lang => props[_$key__lang__DomPropsMixin];  set lang(dynamic value) => props[_$key__lang__DomPropsMixin] = value;dynamic get list => props[_$key__list__DomPropsMixin];  set list(dynamic value) => props[_$key__list__DomPropsMixin] = value;dynamic get manifest => props[_$key__manifest__DomPropsMixin];  set manifest(dynamic value) => props[_$key__manifest__DomPropsMixin] = value;dynamic get max => props[_$key__max__DomPropsMixin];  set max(dynamic value) => props[_$key__max__DomPropsMixin] = value;dynamic get maxLength => props[_$key__maxLength__DomPropsMixin];  set maxLength(dynamic value) => props[_$key__maxLength__DomPropsMixin] = value;dynamic get media => props[_$key__media__DomPropsMixin];  set media(dynamic value) => props[_$key__media__DomPropsMixin] = value;dynamic get mediaGroup => props[_$key__mediaGroup__DomPropsMixin];  set mediaGroup(dynamic value) => props[_$key__mediaGroup__DomPropsMixin] = value;dynamic get method => props[_$key__method__DomPropsMixin];  set method(dynamic value) => props[_$key__method__DomPropsMixin] = value;dynamic get min => props[_$key__min__DomPropsMixin];  set min(dynamic value) => props[_$key__min__DomPropsMixin] = value;dynamic get name => props[_$key__name__DomPropsMixin];  set name(dynamic value) => props[_$key__name__DomPropsMixin] = value;dynamic get open => props[_$key__open__DomPropsMixin];  set open(dynamic value) => props[_$key__open__DomPropsMixin] = value;dynamic get pattern => props[_$key__pattern__DomPropsMixin];  set pattern(dynamic value) => props[_$key__pattern__DomPropsMixin] = value;dynamic get placeholder => props[_$key__placeholder__DomPropsMixin];  set placeholder(dynamic value) => props[_$key__placeholder__DomPropsMixin] = value;
dynamic get poster => props[_$key__poster__DomPropsMixin];  set poster(dynamic value) => props[_$key__poster__DomPropsMixin] = value;dynamic get preload => props[_$key__preload__DomPropsMixin];  set preload(dynamic value) => props[_$key__preload__DomPropsMixin] = value;dynamic get radioGroup => props[_$key__radioGroup__DomPropsMixin];  set radioGroup(dynamic value) => props[_$key__radioGroup__DomPropsMixin] = value;dynamic get rel => props[_$key__rel__DomPropsMixin];  set rel(dynamic value) => props[_$key__rel__DomPropsMixin] = value;dynamic get role => props[_$key__role__DomPropsMixin];  set role(dynamic value) => props[_$key__role__DomPropsMixin] = value;dynamic get rowSpan => props[_$key__rowSpan__DomPropsMixin];  set rowSpan(dynamic value) => props[_$key__rowSpan__DomPropsMixin] = value;dynamic get sandbox => props[_$key__sandbox__DomPropsMixin];  set sandbox(dynamic value) => props[_$key__sandbox__DomPropsMixin] = value;dynamic get scope => props[_$key__scope__DomPropsMixin];  set scope(dynamic value) => props[_$key__scope__DomPropsMixin] = value;dynamic get scrolling => props[_$key__scrolling__DomPropsMixin];  set scrolling(dynamic value) => props[_$key__scrolling__DomPropsMixin] = value;dynamic get shape => props[_$key__shape__DomPropsMixin];  set shape(dynamic value) => props[_$key__shape__DomPropsMixin] = value;dynamic get sizes => props[_$key__sizes__DomPropsMixin];  set sizes(dynamic value) => props[_$key__sizes__DomPropsMixin] = value;dynamic get spellCheck => props[_$key__spellCheck__DomPropsMixin];  set spellCheck(dynamic value) => props[_$key__spellCheck__DomPropsMixin] = value;dynamic get src => props[_$key__src__DomPropsMixin];  set src(dynamic value) => props[_$key__src__DomPropsMixin] = value;dynamic get srcDoc => props[_$key__srcDoc__DomPropsMixin];  set srcDoc(dynamic value) => props[_$key__srcDoc__DomPropsMixin] = value;
dynamic get srcSet => props[_$key__srcSet__DomPropsMixin];  set srcSet(dynamic value) => props[_$key__srcSet__DomPropsMixin] = value;dynamic get step => props[_$key__step__DomPropsMixin];  set step(dynamic value) => props[_$key__step__DomPropsMixin] = value;dynamic get tabIndex => props[_$key__tabIndex__DomPropsMixin];  set tabIndex(dynamic value) => props[_$key__tabIndex__DomPropsMixin] = value;dynamic get target => props[_$key__target__DomPropsMixin];  set target(dynamic value) => props[_$key__target__DomPropsMixin] = value;dynamic get type => props[_$key__type__DomPropsMixin];  set type(dynamic value) => props[_$key__type__DomPropsMixin] = value;dynamic get useMap => props[_$key__useMap__DomPropsMixin];  set useMap(dynamic value) => props[_$key__useMap__DomPropsMixin] = value;dynamic get value => props[_$key__value__DomPropsMixin];  set value(dynamic value) => props[_$key__value__DomPropsMixin] = value;dynamic get width => props[_$key__width__DomPropsMixin];  set width(dynamic value) => props[_$key__width__DomPropsMixin] = value;dynamic get wmode => props[_$key__wmode__DomPropsMixin];  set wmode(dynamic value) => props[_$key__wmode__DomPropsMixin] = value;

  ClipboardEventCallback get onCopy => props[_$key__onCopy__DomPropsMixin];  set onCopy(ClipboardEventCallback value) => props[_$key__onCopy__DomPropsMixin] = value;ClipboardEventCallback get onCut => props[_$key__onCut__DomPropsMixin];  set onCut(ClipboardEventCallback value) => props[_$key__onCut__DomPropsMixin] = value;ClipboardEventCallback get onPaste => props[_$key__onPaste__DomPropsMixin];  set onPaste(ClipboardEventCallback value) => props[_$key__onPaste__DomPropsMixin] = value;
  KeyboardEventCallback get onKeyDown => props[_$key__onKeyDown__DomPropsMixin];  set onKeyDown(KeyboardEventCallback value) => props[_$key__onKeyDown__DomPropsMixin] = value;KeyboardEventCallback get onKeyPress => props[_$key__onKeyPress__DomPropsMixin];  set onKeyPress(KeyboardEventCallback value) => props[_$key__onKeyPress__DomPropsMixin] = value;KeyboardEventCallback get onKeyUp => props[_$key__onKeyUp__DomPropsMixin];  set onKeyUp(KeyboardEventCallback value) => props[_$key__onKeyUp__DomPropsMixin] = value;
  FocusEventCallback get onFocus => props[_$key__onFocus__DomPropsMixin];  set onFocus(FocusEventCallback value) => props[_$key__onFocus__DomPropsMixin] = value;FocusEventCallback get onBlur => props[_$key__onBlur__DomPropsMixin];  set onBlur(FocusEventCallback value) => props[_$key__onBlur__DomPropsMixin] = value;
  FormEventCallback get onChange => props[_$key__onChange__DomPropsMixin];  set onChange(FormEventCallback value) => props[_$key__onChange__DomPropsMixin] = value;FormEventCallback get onInput => props[_$key__onInput__DomPropsMixin];  set onInput(FormEventCallback value) => props[_$key__onInput__DomPropsMixin] = value;FormEventCallback get onSubmit => props[_$key__onSubmit__DomPropsMixin];  set onSubmit(FormEventCallback value) => props[_$key__onSubmit__DomPropsMixin] = value;FormEventCallback get onReset => props[_$key__onReset__DomPropsMixin];  set onReset(FormEventCallback value) => props[_$key__onReset__DomPropsMixin] = value;
  
MouseEventCallback get onClick => props[_$key__onClick__DomPropsMixin];  set onClick(MouseEventCallback value) => props[_$key__onClick__DomPropsMixin] = value;MouseEventCallback get onContextMenu => props[_$key__onContextMenu__DomPropsMixin];  set onContextMenu(MouseEventCallback value) => props[_$key__onContextMenu__DomPropsMixin] = value;MouseEventCallback get onDoubleClick => props[_$key__onDoubleClick__DomPropsMixin];  set onDoubleClick(MouseEventCallback value) => props[_$key__onDoubleClick__DomPropsMixin] = value;MouseEventCallback get onDrag => props[_$key__onDrag__DomPropsMixin];  set onDrag(MouseEventCallback value) => props[_$key__onDrag__DomPropsMixin] = value;MouseEventCallback get onDragEnd => props[_$key__onDragEnd__DomPropsMixin];  set onDragEnd(MouseEventCallback value) => props[_$key__onDragEnd__DomPropsMixin] = value;MouseEventCallback get onDragEnter => props[_$key__onDragEnter__DomPropsMixin];  set onDragEnter(MouseEventCallback value) => props[_$key__onDragEnter__DomPropsMixin] = value;MouseEventCallback get onDragExit => props[_$key__onDragExit__DomPropsMixin];  set onDragExit(MouseEventCallback value) => props[_$key__onDragExit__DomPropsMixin] = value;MouseEventCallback get onDragLeave => props[_$key__onDragLeave__DomPropsMixin];  set onDragLeave(MouseEventCallback value) => props[_$key__onDragLeave__DomPropsMixin] = value;MouseEventCallback get onDragOver => props[_$key__onDragOver__DomPropsMixin];  set onDragOver(MouseEventCallback value) => props[_$key__onDragOver__DomPropsMixin] = value;
MouseEventCallback get onDragStart => props[_$key__onDragStart__DomPropsMixin];  set onDragStart(MouseEventCallback value) => props[_$key__onDragStart__DomPropsMixin] = value;MouseEventCallback get onDrop => props[_$key__onDrop__DomPropsMixin];  set onDrop(MouseEventCallback value) => props[_$key__onDrop__DomPropsMixin] = value;MouseEventCallback get onMouseDown => props[_$key__onMouseDown__DomPropsMixin];  set onMouseDown(MouseEventCallback value) => props[_$key__onMouseDown__DomPropsMixin] = value;MouseEventCallback get onMouseEnter => props[_$key__onMouseEnter__DomPropsMixin];  set onMouseEnter(MouseEventCallback value) => props[_$key__onMouseEnter__DomPropsMixin] = value;MouseEventCallback get onMouseLeave => props[_$key__onMouseLeave__DomPropsMixin];  set onMouseLeave(MouseEventCallback value) => props[_$key__onMouseLeave__DomPropsMixin] = value;MouseEventCallback get onMouseMove => props[_$key__onMouseMove__DomPropsMixin];  set onMouseMove(MouseEventCallback value) => props[_$key__onMouseMove__DomPropsMixin] = value;MouseEventCallback get onMouseOut => props[_$key__onMouseOut__DomPropsMixin];  set onMouseOut(MouseEventCallback value) => props[_$key__onMouseOut__DomPropsMixin] = value;MouseEventCallback get onMouseOver => props[_$key__onMouseOver__DomPropsMixin];  set onMouseOver(MouseEventCallback value) => props[_$key__onMouseOver__DomPropsMixin] = value;MouseEventCallback get onMouseUp => props[_$key__onMouseUp__DomPropsMixin];  set onMouseUp(MouseEventCallback value) => props[_$key__onMouseUp__DomPropsMixin] = value;
  TouchEventCallback get onTouchCancel => props[_$key__onTouchCancel__DomPropsMixin];  set onTouchCancel(TouchEventCallback value) => props[_$key__onTouchCancel__DomPropsMixin] = value;TouchEventCallback get onTouchEnd => props[_$key__onTouchEnd__DomPropsMixin];  set onTouchEnd(TouchEventCallback value) => props[_$key__onTouchEnd__DomPropsMixin] = value;TouchEventCallback get onTouchMove => props[_$key__onTouchMove__DomPropsMixin];  set onTouchMove(TouchEventCallback value) => props[_$key__onTouchMove__DomPropsMixin] = value;TouchEventCallback get onTouchStart => props[_$key__onTouchStart__DomPropsMixin];  set onTouchStart(TouchEventCallback value) => props[_$key__onTouchStart__DomPropsMixin] = value;
  UIEventCallback get onScroll => props[_$key__onScroll__DomPropsMixin];  set onScroll(UIEventCallback value) => props[_$key__onScroll__DomPropsMixin] = value;
  WheelEventCallback get onWheel => props[_$key__onWheel__DomPropsMixin];  set onWheel(WheelEventCallback value) => props[_$key__onWheel__DomPropsMixin] = value;

  ClipboardEventCallback get onCopyCapture => props[_$key__onCopyCapture__DomPropsMixin];  set onCopyCapture(ClipboardEventCallback value) => props[_$key__onCopyCapture__DomPropsMixin] = value;ClipboardEventCallback get onCutCapture => props[_$key__onCutCapture__DomPropsMixin];  set onCutCapture(ClipboardEventCallback value) => props[_$key__onCutCapture__DomPropsMixin] = value;ClipboardEventCallback get onPasteCapture => props[_$key__onPasteCapture__DomPropsMixin];  set onPasteCapture(ClipboardEventCallback value) => props[_$key__onPasteCapture__DomPropsMixin] = value;
  KeyboardEventCallback get onKeyDownCapture => props[_$key__onKeyDownCapture__DomPropsMixin];  set onKeyDownCapture(KeyboardEventCallback value) => props[_$key__onKeyDownCapture__DomPropsMixin] = value;KeyboardEventCallback get onKeyPressCapture => props[_$key__onKeyPressCapture__DomPropsMixin];  set onKeyPressCapture(KeyboardEventCallback value) => props[_$key__onKeyPressCapture__DomPropsMixin] = value;KeyboardEventCallback get onKeyUpCapture => props[_$key__onKeyUpCapture__DomPropsMixin];  set onKeyUpCapture(KeyboardEventCallback value) => props[_$key__onKeyUpCapture__DomPropsMixin] = value;
  FocusEventCallback get onFocusCapture => props[_$key__onFocusCapture__DomPropsMixin];  set onFocusCapture(FocusEventCallback value) => props[_$key__onFocusCapture__DomPropsMixin] = value;FocusEventCallback get onBlurCapture => props[_$key__onBlurCapture__DomPropsMixin];  set onBlurCapture(FocusEventCallback value) => props[_$key__onBlurCapture__DomPropsMixin] = value;
  FormEventCallback get onChangeCapture => props[_$key__onChangeCapture__DomPropsMixin];  set onChangeCapture(FormEventCallback value) => props[_$key__onChangeCapture__DomPropsMixin] = value;FormEventCallback get onInputCapture => props[_$key__onInputCapture__DomPropsMixin];  set onInputCapture(FormEventCallback value) => props[_$key__onInputCapture__DomPropsMixin] = value;FormEventCallback get onSubmitCapture => props[_$key__onSubmitCapture__DomPropsMixin];  set onSubmitCapture(FormEventCallback value) => props[_$key__onSubmitCapture__DomPropsMixin] = value;FormEventCallback get onResetCapture => props[_$key__onResetCapture__DomPropsMixin];  set onResetCapture(FormEventCallback value) => props[_$key__onResetCapture__DomPropsMixin] = value;
  
MouseEventCallback get onClickCapture => props[_$key__onClickCapture__DomPropsMixin];  set onClickCapture(MouseEventCallback value) => props[_$key__onClickCapture__DomPropsMixin] = value;MouseEventCallback get onContextMenuCapture => props[_$key__onContextMenuCapture__DomPropsMixin];  set onContextMenuCapture(MouseEventCallback value) => props[_$key__onContextMenuCapture__DomPropsMixin] = value;MouseEventCallback get onDoubleClickCapture => props[_$key__onDoubleClickCapture__DomPropsMixin];  set onDoubleClickCapture(MouseEventCallback value) => props[_$key__onDoubleClickCapture__DomPropsMixin] = value;MouseEventCallback get onDragCapture => props[_$key__onDragCapture__DomPropsMixin];  set onDragCapture(MouseEventCallback value) => props[_$key__onDragCapture__DomPropsMixin] = value;MouseEventCallback get onDragEndCapture => props[_$key__onDragEndCapture__DomPropsMixin];  set onDragEndCapture(MouseEventCallback value) => props[_$key__onDragEndCapture__DomPropsMixin] = value;MouseEventCallback get onDragEnterCapture => props[_$key__onDragEnterCapture__DomPropsMixin];  set onDragEnterCapture(MouseEventCallback value) => props[_$key__onDragEnterCapture__DomPropsMixin] = value;MouseEventCallback get onDragExitCapture => props[_$key__onDragExitCapture__DomPropsMixin];  set onDragExitCapture(MouseEventCallback value) => props[_$key__onDragExitCapture__DomPropsMixin] = value;MouseEventCallback get onDragLeaveCapture => props[_$key__onDragLeaveCapture__DomPropsMixin];  set onDragLeaveCapture(MouseEventCallback value) => props[_$key__onDragLeaveCapture__DomPropsMixin] = value;MouseEventCallback get onDragOverCapture => props[_$key__onDragOverCapture__DomPropsMixin];  set onDragOverCapture(MouseEventCallback value) => props[_$key__onDragOverCapture__DomPropsMixin] = value;
MouseEventCallback get onDragStartCapture => props[_$key__onDragStartCapture__DomPropsMixin];  set onDragStartCapture(MouseEventCallback value) => props[_$key__onDragStartCapture__DomPropsMixin] = value;MouseEventCallback get onDropCapture => props[_$key__onDropCapture__DomPropsMixin];  set onDropCapture(MouseEventCallback value) => props[_$key__onDropCapture__DomPropsMixin] = value;MouseEventCallback get onMouseDownCapture => props[_$key__onMouseDownCapture__DomPropsMixin];  set onMouseDownCapture(MouseEventCallback value) => props[_$key__onMouseDownCapture__DomPropsMixin] = value;MouseEventCallback get onMouseEnterCapture => props[_$key__onMouseEnterCapture__DomPropsMixin];  set onMouseEnterCapture(MouseEventCallback value) => props[_$key__onMouseEnterCapture__DomPropsMixin] = value;MouseEventCallback get onMouseLeaveCapture => props[_$key__onMouseLeaveCapture__DomPropsMixin];  set onMouseLeaveCapture(MouseEventCallback value) => props[_$key__onMouseLeaveCapture__DomPropsMixin] = value;MouseEventCallback get onMouseMoveCapture => props[_$key__onMouseMoveCapture__DomPropsMixin];  set onMouseMoveCapture(MouseEventCallback value) => props[_$key__onMouseMoveCapture__DomPropsMixin] = value;MouseEventCallback get onMouseOutCapture => props[_$key__onMouseOutCapture__DomPropsMixin];  set onMouseOutCapture(MouseEventCallback value) => props[_$key__onMouseOutCapture__DomPropsMixin] = value;MouseEventCallback get onMouseOverCapture => props[_$key__onMouseOverCapture__DomPropsMixin];  set onMouseOverCapture(MouseEventCallback value) => props[_$key__onMouseOverCapture__DomPropsMixin] = value;MouseEventCallback get onMouseUpCapture => props[_$key__onMouseUpCapture__DomPropsMixin];  set onMouseUpCapture(MouseEventCallback value) => props[_$key__onMouseUpCapture__DomPropsMixin] = value;
  TouchEventCallback get onTouchCancelCapture => props[_$key__onTouchCancelCapture__DomPropsMixin];  set onTouchCancelCapture(TouchEventCallback value) => props[_$key__onTouchCancelCapture__DomPropsMixin] = value;TouchEventCallback get onTouchEndCapture => props[_$key__onTouchEndCapture__DomPropsMixin];  set onTouchEndCapture(TouchEventCallback value) => props[_$key__onTouchEndCapture__DomPropsMixin] = value;TouchEventCallback get onTouchMoveCapture => props[_$key__onTouchMoveCapture__DomPropsMixin];  set onTouchMoveCapture(TouchEventCallback value) => props[_$key__onTouchMoveCapture__DomPropsMixin] = value;TouchEventCallback get onTouchStartCapture => props[_$key__onTouchStartCapture__DomPropsMixin];  set onTouchStartCapture(TouchEventCallback value) => props[_$key__onTouchStartCapture__DomPropsMixin] = value;
  UIEventCallback get onScrollCapture => props[_$key__onScrollCapture__DomPropsMixin];  set onScrollCapture(UIEventCallback value) => props[_$key__onScrollCapture__DomPropsMixin] = value;
  WheelEventCallback get onWheelCapture => props[_$key__onWheelCapture__DomPropsMixin];  set onWheelCapture(WheelEventCallback value) => props[_$key__onWheelCapture__DomPropsMixin] = value;

  // props specific to React.INPUT
  bool get defaultChecked => props[_$key__defaultChecked__DomPropsMixin];  set defaultChecked(bool value) => props[_$key__defaultChecked__DomPropsMixin] = value;
  dynamic get defaultValue => props[_$key__defaultValue__DomPropsMixin];  set defaultValue(dynamic value) => props[_$key__defaultValue__DomPropsMixin] = value;

  /// Polyfills/normalizes the `autofocus` attribute via AutoFocusMixin
  /// (mixed in by React DOM <input>, <textarea>, and <select>).
  bool get autoFocus => props[_$key__autoFocus__DomPropsMixin];  set autoFocus(bool value) => props[_$key__autoFocus__DomPropsMixin] = value;
}

@PropsMixin(keyNamespace: '')
abstract class SvgPropsMixin {    /* GENERATED CONSTANTS */ static const ConsumedProps $consumedProps = const ConsumedProps($props, $propKeys); static const PropDescriptor _$prop__clipPath__SvgPropsMixin = const PropDescriptor(_$key__clipPath__SvgPropsMixin), _$prop__cx__SvgPropsMixin = const PropDescriptor(_$key__cx__SvgPropsMixin), _$prop__cy__SvgPropsMixin = const PropDescriptor(_$key__cy__SvgPropsMixin), _$prop__d__SvgPropsMixin = const PropDescriptor(_$key__d__SvgPropsMixin), _$prop__dx__SvgPropsMixin = const PropDescriptor(_$key__dx__SvgPropsMixin), _$prop__dy__SvgPropsMixin = const PropDescriptor(_$key__dy__SvgPropsMixin), _$prop__fill__SvgPropsMixin = const PropDescriptor(_$key__fill__SvgPropsMixin), _$prop__fillOpacity__SvgPropsMixin = const PropDescriptor(_$key__fillOpacity__SvgPropsMixin), _$prop__fontFamily__SvgPropsMixin = const PropDescriptor(_$key__fontFamily__SvgPropsMixin), _$prop__fontSize__SvgPropsMixin = const PropDescriptor(_$key__fontSize__SvgPropsMixin), _$prop__fx__SvgPropsMixin = const PropDescriptor(_$key__fx__SvgPropsMixin), _$prop__fy__SvgPropsMixin = const PropDescriptor(_$key__fy__SvgPropsMixin), _$prop__gradientTransform__SvgPropsMixin = const PropDescriptor(_$key__gradientTransform__SvgPropsMixin), _$prop__gradientUnits__SvgPropsMixin = const PropDescriptor(_$key__gradientUnits__SvgPropsMixin), _$prop__markerEnd__SvgPropsMixin = const PropDescriptor(_$key__markerEnd__SvgPropsMixin), _$prop__markerMid__SvgPropsMixin = const PropDescriptor(_$key__markerMid__SvgPropsMixin), _$prop__markerStart__SvgPropsMixin = const PropDescriptor(_$key__markerStart__SvgPropsMixin), _$prop__offset__SvgPropsMixin = const PropDescriptor(_$key__offset__SvgPropsMixin), _$prop__opacity__SvgPropsMixin = const PropDescriptor(_$key__opacity__SvgPropsMixin), _$prop__patternContentUnits__SvgPropsMixin = const PropDescriptor(_$key__patternContentUnits__SvgPropsMixin), _$prop__patternUnits__SvgPropsMixin = const PropDescriptor(_$key__patternUnits__SvgPropsMixin), _$prop__points__SvgPropsMixin = const PropDescriptor(_$key__points__SvgPropsMixin), _$prop__preserveAspectRatio__SvgPropsMixin = const PropDescriptor(_$key__preserveAspectRatio__SvgPropsMixin), _$prop__r__SvgPropsMixin = const PropDescriptor(_$key__r__SvgPropsMixin), _$prop__rx__SvgPropsMixin = const PropDescriptor(_$key__rx__SvgPropsMixin), _$prop__ry__SvgPropsMixin = const PropDescriptor(_$key__ry__SvgPropsMixin), _$prop__spreadMethod__SvgPropsMixin = const PropDescriptor(_$key__spreadMethod__SvgPropsMixin), _$prop__stopColor__SvgPropsMixin = const PropDescriptor(_$key__stopColor__SvgPropsMixin), _$prop__stopOpacity__SvgPropsMixin = const PropDescriptor(_$key__stopOpacity__SvgPropsMixin), _$prop__stroke__SvgPropsMixin = const PropDescriptor(_$key__stroke__SvgPropsMixin), _$prop__strokeDasharray__SvgPropsMixin = const PropDescriptor(_$key__strokeDasharray__SvgPropsMixin), _$prop__strokeLinecap__SvgPropsMixin = const PropDescriptor(_$key__strokeLinecap__SvgPropsMixin), _$prop__strokeOpacity__SvgPropsMixin = const PropDescriptor(_$key__strokeOpacity__SvgPropsMixin), _$prop__strokeWidth__SvgPropsMixin = const PropDescriptor(_$key__strokeWidth__SvgPropsMixin), _$prop__textAnchor__SvgPropsMixin = const PropDescriptor(_$key__textAnchor__SvgPropsMixin), _$prop__transform__SvgPropsMixin = const PropDescriptor(_$key__transform__SvgPropsMixin), _$prop__version__SvgPropsMixin = const PropDescriptor(_$key__version__SvgPropsMixin), _$prop__viewBox__SvgPropsMixin = const PropDescriptor(_$key__viewBox__SvgPropsMixin), _$prop__x1__SvgPropsMixin = const PropDescriptor(_$key__x1__SvgPropsMixin), _$prop__x2__SvgPropsMixin = const PropDescriptor(_$key__x2__SvgPropsMixin), _$prop__x__SvgPropsMixin = const PropDescriptor(_$key__x__SvgPropsMixin), _$prop__xlinkActuate__SvgPropsMixin = const PropDescriptor(_$key__xlinkActuate__SvgPropsMixin), _$prop__xlinkArcrole__SvgPropsMixin = const PropDescriptor(_$key__xlinkArcrole__SvgPropsMixin), _$prop__xlinkHref__SvgPropsMixin = const PropDescriptor(_$key__xlinkHref__SvgPropsMixin), _$prop__xlinkRole__SvgPropsMixin = const PropDescriptor(_$key__xlinkRole__SvgPropsMixin), _$prop__xlinkShow__SvgPropsMixin = const PropDescriptor(_$key__xlinkShow__SvgPropsMixin), _$prop__xlinkTitle__SvgPropsMixin = const PropDescriptor(_$key__xlinkTitle__SvgPropsMixin), _$prop__xlinkType__SvgPropsMixin = const PropDescriptor(_$key__xlinkType__SvgPropsMixin), _$prop__xmlBase__SvgPropsMixin = const PropDescriptor(_$key__xmlBase__SvgPropsMixin), _$prop__xmlLang__SvgPropsMixin = const PropDescriptor(_$key__xmlLang__SvgPropsMixin), _$prop__xmlSpace__SvgPropsMixin = const PropDescriptor(_$key__xmlSpace__SvgPropsMixin), _$prop__y1__SvgPropsMixin = const PropDescriptor(_$key__y1__SvgPropsMixin), _$prop__y2__SvgPropsMixin = const PropDescriptor(_$key__y2__SvgPropsMixin), _$prop__y__SvgPropsMixin = const PropDescriptor(_$key__y__SvgPropsMixin); static const List<PropDescriptor> $props = const [_$prop__clipPath__SvgPropsMixin, _$prop__cx__SvgPropsMixin, _$prop__cy__SvgPropsMixin, _$prop__d__SvgPropsMixin, _$prop__dx__SvgPropsMixin, _$prop__dy__SvgPropsMixin, _$prop__fill__SvgPropsMixin, _$prop__fillOpacity__SvgPropsMixin, _$prop__fontFamily__SvgPropsMixin, _$prop__fontSize__SvgPropsMixin, _$prop__fx__SvgPropsMixin, _$prop__fy__SvgPropsMixin, _$prop__gradientTransform__SvgPropsMixin, _$prop__gradientUnits__SvgPropsMixin, _$prop__markerEnd__SvgPropsMixin, _$prop__markerMid__SvgPropsMixin, _$prop__markerStart__SvgPropsMixin, _$prop__offset__SvgPropsMixin, _$prop__opacity__SvgPropsMixin, _$prop__patternContentUnits__SvgPropsMixin, _$prop__patternUnits__SvgPropsMixin, _$prop__points__SvgPropsMixin, _$prop__preserveAspectRatio__SvgPropsMixin, _$prop__r__SvgPropsMixin, _$prop__rx__SvgPropsMixin, _$prop__ry__SvgPropsMixin, _$prop__spreadMethod__SvgPropsMixin, _$prop__stopColor__SvgPropsMixin, _$prop__stopOpacity__SvgPropsMixin, _$prop__stroke__SvgPropsMixin, _$prop__strokeDasharray__SvgPropsMixin, _$prop__strokeLinecap__SvgPropsMixin, _$prop__strokeOpacity__SvgPropsMixin, _$prop__strokeWidth__SvgPropsMixin, _$prop__textAnchor__SvgPropsMixin, _$prop__transform__SvgPropsMixin, _$prop__version__SvgPropsMixin, _$prop__viewBox__SvgPropsMixin, _$prop__x1__SvgPropsMixin, _$prop__x2__SvgPropsMixin, _$prop__x__SvgPropsMixin, _$prop__xlinkActuate__SvgPropsMixin, _$prop__xlinkArcrole__SvgPropsMixin, _$prop__xlinkHref__SvgPropsMixin, _$prop__xlinkRole__SvgPropsMixin, _$prop__xlinkShow__SvgPropsMixin, _$prop__xlinkTitle__SvgPropsMixin, _$prop__xlinkType__SvgPropsMixin, _$prop__xmlBase__SvgPropsMixin, _$prop__xmlLang__SvgPropsMixin, _$prop__xmlSpace__SvgPropsMixin, _$prop__y1__SvgPropsMixin, _$prop__y2__SvgPropsMixin, _$prop__y__SvgPropsMixin]; static const String _$key__clipPath__SvgPropsMixin = 'clipPath', _$key__cx__SvgPropsMixin = 'cx', _$key__cy__SvgPropsMixin = 'cy', _$key__d__SvgPropsMixin = 'd', _$key__dx__SvgPropsMixin = 'dx', _$key__dy__SvgPropsMixin = 'dy', _$key__fill__SvgPropsMixin = 'fill', _$key__fillOpacity__SvgPropsMixin = 'fillOpacity', _$key__fontFamily__SvgPropsMixin = 'fontFamily', _$key__fontSize__SvgPropsMixin = 'fontSize', _$key__fx__SvgPropsMixin = 'fx', _$key__fy__SvgPropsMixin = 'fy', _$key__gradientTransform__SvgPropsMixin = 'gradientTransform', _$key__gradientUnits__SvgPropsMixin = 'gradientUnits', _$key__markerEnd__SvgPropsMixin = 'markerEnd', _$key__markerMid__SvgPropsMixin = 'markerMid', _$key__markerStart__SvgPropsMixin = 'markerStart', _$key__offset__SvgPropsMixin = 'offset', _$key__opacity__SvgPropsMixin = 'opacity', _$key__patternContentUnits__SvgPropsMixin = 'patternContentUnits', _$key__patternUnits__SvgPropsMixin = 'patternUnits', _$key__points__SvgPropsMixin = 'points', _$key__preserveAspectRatio__SvgPropsMixin = 'preserveAspectRatio', _$key__r__SvgPropsMixin = 'r', _$key__rx__SvgPropsMixin = 'rx', _$key__ry__SvgPropsMixin = 'ry', _$key__spreadMethod__SvgPropsMixin = 'spreadMethod', _$key__stopColor__SvgPropsMixin = 'stopColor', _$key__stopOpacity__SvgPropsMixin = 'stopOpacity', _$key__stroke__SvgPropsMixin = 'stroke', _$key__strokeDasharray__SvgPropsMixin = 'strokeDasharray', _$key__strokeLinecap__SvgPropsMixin = 'strokeLinecap', _$key__strokeOpacity__SvgPropsMixin = 'strokeOpacity', _$key__strokeWidth__SvgPropsMixin = 'strokeWidth', _$key__textAnchor__SvgPropsMixin = 'textAnchor', _$key__transform__SvgPropsMixin = 'transform', _$key__version__SvgPropsMixin = 'version', _$key__viewBox__SvgPropsMixin = 'viewBox', _$key__x1__SvgPropsMixin = 'x1', _$key__x2__SvgPropsMixin = 'x2', _$key__x__SvgPropsMixin = 'x', _$key__xlinkActuate__SvgPropsMixin = 'xlinkActuate', _$key__xlinkArcrole__SvgPropsMixin = 'xlinkArcrole', _$key__xlinkHref__SvgPropsMixin = 'xlinkHref', _$key__xlinkRole__SvgPropsMixin = 'xlinkRole', _$key__xlinkShow__SvgPropsMixin = 'xlinkShow', _$key__xlinkTitle__SvgPropsMixin = 'xlinkTitle', _$key__xlinkType__SvgPropsMixin = 'xlinkType', _$key__xmlBase__SvgPropsMixin = 'xmlBase', _$key__xmlLang__SvgPropsMixin = 'xmlLang', _$key__xmlSpace__SvgPropsMixin = 'xmlSpace', _$key__y1__SvgPropsMixin = 'y1', _$key__y2__SvgPropsMixin = 'y2', _$key__y__SvgPropsMixin = 'y'; static const List<String> $propKeys = const [_$key__clipPath__SvgPropsMixin, _$key__cx__SvgPropsMixin, _$key__cy__SvgPropsMixin, _$key__d__SvgPropsMixin, _$key__dx__SvgPropsMixin, _$key__dy__SvgPropsMixin, _$key__fill__SvgPropsMixin, _$key__fillOpacity__SvgPropsMixin, _$key__fontFamily__SvgPropsMixin, _$key__fontSize__SvgPropsMixin, _$key__fx__SvgPropsMixin, _$key__fy__SvgPropsMixin, _$key__gradientTransform__SvgPropsMixin, _$key__gradientUnits__SvgPropsMixin, _$key__markerEnd__SvgPropsMixin, _$key__markerMid__SvgPropsMixin, _$key__markerStart__SvgPropsMixin, _$key__offset__SvgPropsMixin, _$key__opacity__SvgPropsMixin, _$key__patternContentUnits__SvgPropsMixin, _$key__patternUnits__SvgPropsMixin, _$key__points__SvgPropsMixin, _$key__preserveAspectRatio__SvgPropsMixin, _$key__r__SvgPropsMixin, _$key__rx__SvgPropsMixin, _$key__ry__SvgPropsMixin, _$key__spreadMethod__SvgPropsMixin, _$key__stopColor__SvgPropsMixin, _$key__stopOpacity__SvgPropsMixin, _$key__stroke__SvgPropsMixin, _$key__strokeDasharray__SvgPropsMixin, _$key__strokeLinecap__SvgPropsMixin, _$key__strokeOpacity__SvgPropsMixin, _$key__strokeWidth__SvgPropsMixin, _$key__textAnchor__SvgPropsMixin, _$key__transform__SvgPropsMixin, _$key__version__SvgPropsMixin, _$key__viewBox__SvgPropsMixin, _$key__x1__SvgPropsMixin, _$key__x2__SvgPropsMixin, _$key__x__SvgPropsMixin, _$key__xlinkActuate__SvgPropsMixin, _$key__xlinkArcrole__SvgPropsMixin, _$key__xlinkHref__SvgPropsMixin, _$key__xlinkRole__SvgPropsMixin, _$key__xlinkShow__SvgPropsMixin, _$key__xlinkTitle__SvgPropsMixin, _$key__xlinkType__SvgPropsMixin, _$key__xmlBase__SvgPropsMixin, _$key__xmlLang__SvgPropsMixin, _$key__xmlSpace__SvgPropsMixin, _$key__y1__SvgPropsMixin, _$key__y2__SvgPropsMixin, _$key__y__SvgPropsMixin]; 
  Map get props;

  dynamic get clipPath => props[_$key__clipPath__SvgPropsMixin];  set clipPath(dynamic value) => props[_$key__clipPath__SvgPropsMixin] = value;dynamic get cx => props[_$key__cx__SvgPropsMixin];  set cx(dynamic value) => props[_$key__cx__SvgPropsMixin] = value;dynamic get cy => props[_$key__cy__SvgPropsMixin];  set cy(dynamic value) => props[_$key__cy__SvgPropsMixin] = value;dynamic get d => props[_$key__d__SvgPropsMixin];  set d(dynamic value) => props[_$key__d__SvgPropsMixin] = value;dynamic get dx => props[_$key__dx__SvgPropsMixin];  set dx(dynamic value) => props[_$key__dx__SvgPropsMixin] = value;dynamic get dy => props[_$key__dy__SvgPropsMixin];  set dy(dynamic value) => props[_$key__dy__SvgPropsMixin] = value;dynamic get fill => props[_$key__fill__SvgPropsMixin];  set fill(dynamic value) => props[_$key__fill__SvgPropsMixin] = value;dynamic get fillOpacity => props[_$key__fillOpacity__SvgPropsMixin];  set fillOpacity(dynamic value) => props[_$key__fillOpacity__SvgPropsMixin] = value;dynamic get fontFamily => props[_$key__fontFamily__SvgPropsMixin];  set fontFamily(dynamic value) => props[_$key__fontFamily__SvgPropsMixin] = value;dynamic get fontSize => props[_$key__fontSize__SvgPropsMixin];  set fontSize(dynamic value) => props[_$key__fontSize__SvgPropsMixin] = value;dynamic get fx => props[_$key__fx__SvgPropsMixin];  set fx(dynamic value) => props[_$key__fx__SvgPropsMixin] = value;dynamic get fy => props[_$key__fy__SvgPropsMixin];  set fy(dynamic value) => props[_$key__fy__SvgPropsMixin] = value;dynamic get gradientTransform => props[_$key__gradientTransform__SvgPropsMixin];  set gradientTransform(dynamic value) => props[_$key__gradientTransform__SvgPropsMixin] = value;
dynamic get gradientUnits => props[_$key__gradientUnits__SvgPropsMixin];  set gradientUnits(dynamic value) => props[_$key__gradientUnits__SvgPropsMixin] = value;dynamic get markerEnd => props[_$key__markerEnd__SvgPropsMixin];  set markerEnd(dynamic value) => props[_$key__markerEnd__SvgPropsMixin] = value;dynamic get markerMid => props[_$key__markerMid__SvgPropsMixin];  set markerMid(dynamic value) => props[_$key__markerMid__SvgPropsMixin] = value;dynamic get markerStart => props[_$key__markerStart__SvgPropsMixin];  set markerStart(dynamic value) => props[_$key__markerStart__SvgPropsMixin] = value;dynamic get offset => props[_$key__offset__SvgPropsMixin];  set offset(dynamic value) => props[_$key__offset__SvgPropsMixin] = value;dynamic get opacity => props[_$key__opacity__SvgPropsMixin];  set opacity(dynamic value) => props[_$key__opacity__SvgPropsMixin] = value;dynamic get patternContentUnits => props[_$key__patternContentUnits__SvgPropsMixin];  set patternContentUnits(dynamic value) => props[_$key__patternContentUnits__SvgPropsMixin] = value;dynamic get patternUnits => props[_$key__patternUnits__SvgPropsMixin];  set patternUnits(dynamic value) => props[_$key__patternUnits__SvgPropsMixin] = value;dynamic get points => props[_$key__points__SvgPropsMixin];  set points(dynamic value) => props[_$key__points__SvgPropsMixin] = value;
dynamic get preserveAspectRatio => props[_$key__preserveAspectRatio__SvgPropsMixin];  set preserveAspectRatio(dynamic value) => props[_$key__preserveAspectRatio__SvgPropsMixin] = value;dynamic get r => props[_$key__r__SvgPropsMixin];  set r(dynamic value) => props[_$key__r__SvgPropsMixin] = value;dynamic get rx => props[_$key__rx__SvgPropsMixin];  set rx(dynamic value) => props[_$key__rx__SvgPropsMixin] = value;dynamic get ry => props[_$key__ry__SvgPropsMixin];  set ry(dynamic value) => props[_$key__ry__SvgPropsMixin] = value;dynamic get spreadMethod => props[_$key__spreadMethod__SvgPropsMixin];  set spreadMethod(dynamic value) => props[_$key__spreadMethod__SvgPropsMixin] = value;dynamic get stopColor => props[_$key__stopColor__SvgPropsMixin];  set stopColor(dynamic value) => props[_$key__stopColor__SvgPropsMixin] = value;dynamic get stopOpacity => props[_$key__stopOpacity__SvgPropsMixin];  set stopOpacity(dynamic value) => props[_$key__stopOpacity__SvgPropsMixin] = value;dynamic get stroke => props[_$key__stroke__SvgPropsMixin];  set stroke(dynamic value) => props[_$key__stroke__SvgPropsMixin] = value;dynamic get strokeDasharray => props[_$key__strokeDasharray__SvgPropsMixin];  set strokeDasharray(dynamic value) => props[_$key__strokeDasharray__SvgPropsMixin] = value;dynamic get strokeLinecap => props[_$key__strokeLinecap__SvgPropsMixin];  set strokeLinecap(dynamic value) => props[_$key__strokeLinecap__SvgPropsMixin] = value;
dynamic get strokeOpacity => props[_$key__strokeOpacity__SvgPropsMixin];  set strokeOpacity(dynamic value) => props[_$key__strokeOpacity__SvgPropsMixin] = value;dynamic get strokeWidth => props[_$key__strokeWidth__SvgPropsMixin];  set strokeWidth(dynamic value) => props[_$key__strokeWidth__SvgPropsMixin] = value;dynamic get textAnchor => props[_$key__textAnchor__SvgPropsMixin];  set textAnchor(dynamic value) => props[_$key__textAnchor__SvgPropsMixin] = value;dynamic get transform => props[_$key__transform__SvgPropsMixin];  set transform(dynamic value) => props[_$key__transform__SvgPropsMixin] = value;dynamic get version => props[_$key__version__SvgPropsMixin];  set version(dynamic value) => props[_$key__version__SvgPropsMixin] = value;dynamic get viewBox => props[_$key__viewBox__SvgPropsMixin];  set viewBox(dynamic value) => props[_$key__viewBox__SvgPropsMixin] = value;dynamic get x1 => props[_$key__x1__SvgPropsMixin];  set x1(dynamic value) => props[_$key__x1__SvgPropsMixin] = value;dynamic get x2 => props[_$key__x2__SvgPropsMixin];  set x2(dynamic value) => props[_$key__x2__SvgPropsMixin] = value;dynamic get x => props[_$key__x__SvgPropsMixin];  set x(dynamic value) => props[_$key__x__SvgPropsMixin] = value;dynamic get xlinkActuate => props[_$key__xlinkActuate__SvgPropsMixin];  set xlinkActuate(dynamic value) => props[_$key__xlinkActuate__SvgPropsMixin] = value;dynamic get xlinkArcrole => props[_$key__xlinkArcrole__SvgPropsMixin];  set xlinkArcrole(dynamic value) => props[_$key__xlinkArcrole__SvgPropsMixin] = value;
dynamic get xlinkHref => props[_$key__xlinkHref__SvgPropsMixin];  set xlinkHref(dynamic value) => props[_$key__xlinkHref__SvgPropsMixin] = value;dynamic get xlinkRole => props[_$key__xlinkRole__SvgPropsMixin];  set xlinkRole(dynamic value) => props[_$key__xlinkRole__SvgPropsMixin] = value;dynamic get xlinkShow => props[_$key__xlinkShow__SvgPropsMixin];  set xlinkShow(dynamic value) => props[_$key__xlinkShow__SvgPropsMixin] = value;dynamic get xlinkTitle => props[_$key__xlinkTitle__SvgPropsMixin];  set xlinkTitle(dynamic value) => props[_$key__xlinkTitle__SvgPropsMixin] = value;dynamic get xlinkType => props[_$key__xlinkType__SvgPropsMixin];  set xlinkType(dynamic value) => props[_$key__xlinkType__SvgPropsMixin] = value;dynamic get xmlBase => props[_$key__xmlBase__SvgPropsMixin];  set xmlBase(dynamic value) => props[_$key__xmlBase__SvgPropsMixin] = value;dynamic get xmlLang => props[_$key__xmlLang__SvgPropsMixin];  set xmlLang(dynamic value) => props[_$key__xmlLang__SvgPropsMixin] = value;dynamic get xmlSpace => props[_$key__xmlSpace__SvgPropsMixin];  set xmlSpace(dynamic value) => props[_$key__xmlSpace__SvgPropsMixin] = value;dynamic get y1 => props[_$key__y1__SvgPropsMixin];  set y1(dynamic value) => props[_$key__y1__SvgPropsMixin] = value;dynamic get y2 => props[_$key__y2__SvgPropsMixin];  set y2(dynamic value) => props[_$key__y2__SvgPropsMixin] = value;dynamic get y => props[_$key__y__SvgPropsMixin];  set y(dynamic value) => props[_$key__y__SvgPropsMixin] = value;
}

/// Typed getters/setters for reserved DOM-related props that can be used by all UIP components.
/// To be used as a mixin for React components and builders.
@PropsMixin(keyNamespace: '')
abstract class UbiquitousDomPropsMixin {    /* GENERATED CONSTANTS */ static const ConsumedProps $consumedProps = const ConsumedProps($props, $propKeys); static const PropDescriptor _$prop__tabIndex__UbiquitousDomPropsMixin = const PropDescriptor(_$key__tabIndex__UbiquitousDomPropsMixin), _$prop__id__UbiquitousDomPropsMixin = const PropDescriptor(_$key__id__UbiquitousDomPropsMixin), _$prop__title__UbiquitousDomPropsMixin = const PropDescriptor(_$key__title__UbiquitousDomPropsMixin), _$prop__style__UbiquitousDomPropsMixin = const PropDescriptor(_$key__style__UbiquitousDomPropsMixin), _$prop__onCopy__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onCopy__UbiquitousDomPropsMixin), _$prop__onCut__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onCut__UbiquitousDomPropsMixin), _$prop__onPaste__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onPaste__UbiquitousDomPropsMixin), _$prop__onKeyDown__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onKeyDown__UbiquitousDomPropsMixin), _$prop__onKeyPress__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onKeyPress__UbiquitousDomPropsMixin), _$prop__onKeyUp__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onKeyUp__UbiquitousDomPropsMixin), _$prop__onFocus__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onFocus__UbiquitousDomPropsMixin), _$prop__onBlur__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onBlur__UbiquitousDomPropsMixin), _$prop__onChange__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onChange__UbiquitousDomPropsMixin), _$prop__onInput__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onInput__UbiquitousDomPropsMixin), _$prop__onSubmit__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onSubmit__UbiquitousDomPropsMixin), _$prop__onReset__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onReset__UbiquitousDomPropsMixin), _$prop__onClick__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onClick__UbiquitousDomPropsMixin), _$prop__onContextMenu__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onContextMenu__UbiquitousDomPropsMixin), _$prop__onDoubleClick__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onDoubleClick__UbiquitousDomPropsMixin), _$prop__onDrag__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onDrag__UbiquitousDomPropsMixin), _$prop__onDragEnd__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onDragEnd__UbiquitousDomPropsMixin), _$prop__onDragEnter__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onDragEnter__UbiquitousDomPropsMixin), _$prop__onDragExit__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onDragExit__UbiquitousDomPropsMixin), _$prop__onDragLeave__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onDragLeave__UbiquitousDomPropsMixin), _$prop__onDragOver__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onDragOver__UbiquitousDomPropsMixin), _$prop__onDragStart__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onDragStart__UbiquitousDomPropsMixin), _$prop__onDrop__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onDrop__UbiquitousDomPropsMixin), _$prop__onMouseDown__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onMouseDown__UbiquitousDomPropsMixin), _$prop__onMouseEnter__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onMouseEnter__UbiquitousDomPropsMixin), _$prop__onMouseLeave__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onMouseLeave__UbiquitousDomPropsMixin), _$prop__onMouseMove__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onMouseMove__UbiquitousDomPropsMixin), _$prop__onMouseOut__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onMouseOut__UbiquitousDomPropsMixin), _$prop__onMouseOver__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onMouseOver__UbiquitousDomPropsMixin), _$prop__onMouseUp__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onMouseUp__UbiquitousDomPropsMixin), _$prop__onTouchCancel__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onTouchCancel__UbiquitousDomPropsMixin), _$prop__onTouchEnd__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onTouchEnd__UbiquitousDomPropsMixin), _$prop__onTouchMove__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onTouchMove__UbiquitousDomPropsMixin), _$prop__onTouchStart__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onTouchStart__UbiquitousDomPropsMixin), _$prop__onScroll__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onScroll__UbiquitousDomPropsMixin), _$prop__onWheel__UbiquitousDomPropsMixin = const PropDescriptor(_$key__onWheel__UbiquitousDomPropsMixin); static const List<PropDescriptor> $props = const [_$prop__tabIndex__UbiquitousDomPropsMixin, _$prop__id__UbiquitousDomPropsMixin, _$prop__title__UbiquitousDomPropsMixin, _$prop__style__UbiquitousDomPropsMixin, _$prop__onCopy__UbiquitousDomPropsMixin, _$prop__onCut__UbiquitousDomPropsMixin, _$prop__onPaste__UbiquitousDomPropsMixin, _$prop__onKeyDown__UbiquitousDomPropsMixin, _$prop__onKeyPress__UbiquitousDomPropsMixin, _$prop__onKeyUp__UbiquitousDomPropsMixin, _$prop__onFocus__UbiquitousDomPropsMixin, _$prop__onBlur__UbiquitousDomPropsMixin, _$prop__onChange__UbiquitousDomPropsMixin, _$prop__onInput__UbiquitousDomPropsMixin, _$prop__onSubmit__UbiquitousDomPropsMixin, _$prop__onReset__UbiquitousDomPropsMixin, _$prop__onClick__UbiquitousDomPropsMixin, _$prop__onContextMenu__UbiquitousDomPropsMixin, _$prop__onDoubleClick__UbiquitousDomPropsMixin, _$prop__onDrag__UbiquitousDomPropsMixin, _$prop__onDragEnd__UbiquitousDomPropsMixin, _$prop__onDragEnter__UbiquitousDomPropsMixin, _$prop__onDragExit__UbiquitousDomPropsMixin, _$prop__onDragLeave__UbiquitousDomPropsMixin, _$prop__onDragOver__UbiquitousDomPropsMixin, _$prop__onDragStart__UbiquitousDomPropsMixin, _$prop__onDrop__UbiquitousDomPropsMixin, _$prop__onMouseDown__UbiquitousDomPropsMixin, _$prop__onMouseEnter__UbiquitousDomPropsMixin, _$prop__onMouseLeave__UbiquitousDomPropsMixin, _$prop__onMouseMove__UbiquitousDomPropsMixin, _$prop__onMouseOut__UbiquitousDomPropsMixin, _$prop__onMouseOver__UbiquitousDomPropsMixin, _$prop__onMouseUp__UbiquitousDomPropsMixin, _$prop__onTouchCancel__UbiquitousDomPropsMixin, _$prop__onTouchEnd__UbiquitousDomPropsMixin, _$prop__onTouchMove__UbiquitousDomPropsMixin, _$prop__onTouchStart__UbiquitousDomPropsMixin, _$prop__onScroll__UbiquitousDomPropsMixin, _$prop__onWheel__UbiquitousDomPropsMixin]; static const String _$key__tabIndex__UbiquitousDomPropsMixin = 'tabIndex', _$key__id__UbiquitousDomPropsMixin = 'id', _$key__title__UbiquitousDomPropsMixin = 'title', _$key__style__UbiquitousDomPropsMixin = 'style', _$key__onCopy__UbiquitousDomPropsMixin = 'onCopy', _$key__onCut__UbiquitousDomPropsMixin = 'onCut', _$key__onPaste__UbiquitousDomPropsMixin = 'onPaste', _$key__onKeyDown__UbiquitousDomPropsMixin = 'onKeyDown', _$key__onKeyPress__UbiquitousDomPropsMixin = 'onKeyPress', _$key__onKeyUp__UbiquitousDomPropsMixin = 'onKeyUp', _$key__onFocus__UbiquitousDomPropsMixin = 'onFocus', _$key__onBlur__UbiquitousDomPropsMixin = 'onBlur', _$key__onChange__UbiquitousDomPropsMixin = 'onChange', _$key__onInput__UbiquitousDomPropsMixin = 'onInput', _$key__onSubmit__UbiquitousDomPropsMixin = 'onSubmit', _$key__onReset__UbiquitousDomPropsMixin = 'onReset', _$key__onClick__UbiquitousDomPropsMixin = 'onClick', _$key__onContextMenu__UbiquitousDomPropsMixin = 'onContextMenu', _$key__onDoubleClick__UbiquitousDomPropsMixin = 'onDoubleClick', _$key__onDrag__UbiquitousDomPropsMixin = 'onDrag', _$key__onDragEnd__UbiquitousDomPropsMixin = 'onDragEnd', _$key__onDragEnter__UbiquitousDomPropsMixin = 'onDragEnter', _$key__onDragExit__UbiquitousDomPropsMixin = 'onDragExit', _$key__onDragLeave__UbiquitousDomPropsMixin = 'onDragLeave', _$key__onDragOver__UbiquitousDomPropsMixin = 'onDragOver', _$key__onDragStart__UbiquitousDomPropsMixin = 'onDragStart', _$key__onDrop__UbiquitousDomPropsMixin = 'onDrop', _$key__onMouseDown__UbiquitousDomPropsMixin = 'onMouseDown', _$key__onMouseEnter__UbiquitousDomPropsMixin = 'onMouseEnter', _$key__onMouseLeave__UbiquitousDomPropsMixin = 'onMouseLeave', _$key__onMouseMove__UbiquitousDomPropsMixin = 'onMouseMove', _$key__onMouseOut__UbiquitousDomPropsMixin = 'onMouseOut', _$key__onMouseOver__UbiquitousDomPropsMixin = 'onMouseOver', _$key__onMouseUp__UbiquitousDomPropsMixin = 'onMouseUp', _$key__onTouchCancel__UbiquitousDomPropsMixin = 'onTouchCancel', _$key__onTouchEnd__UbiquitousDomPropsMixin = 'onTouchEnd', _$key__onTouchMove__UbiquitousDomPropsMixin = 'onTouchMove', _$key__onTouchStart__UbiquitousDomPropsMixin = 'onTouchStart', _$key__onScroll__UbiquitousDomPropsMixin = 'onScroll', _$key__onWheel__UbiquitousDomPropsMixin = 'onWheel'; static const List<String> $propKeys = const [_$key__tabIndex__UbiquitousDomPropsMixin, _$key__id__UbiquitousDomPropsMixin, _$key__title__UbiquitousDomPropsMixin, _$key__style__UbiquitousDomPropsMixin, _$key__onCopy__UbiquitousDomPropsMixin, _$key__onCut__UbiquitousDomPropsMixin, _$key__onPaste__UbiquitousDomPropsMixin, _$key__onKeyDown__UbiquitousDomPropsMixin, _$key__onKeyPress__UbiquitousDomPropsMixin, _$key__onKeyUp__UbiquitousDomPropsMixin, _$key__onFocus__UbiquitousDomPropsMixin, _$key__onBlur__UbiquitousDomPropsMixin, _$key__onChange__UbiquitousDomPropsMixin, _$key__onInput__UbiquitousDomPropsMixin, _$key__onSubmit__UbiquitousDomPropsMixin, _$key__onReset__UbiquitousDomPropsMixin, _$key__onClick__UbiquitousDomPropsMixin, _$key__onContextMenu__UbiquitousDomPropsMixin, _$key__onDoubleClick__UbiquitousDomPropsMixin, _$key__onDrag__UbiquitousDomPropsMixin, _$key__onDragEnd__UbiquitousDomPropsMixin, _$key__onDragEnter__UbiquitousDomPropsMixin, _$key__onDragExit__UbiquitousDomPropsMixin, _$key__onDragLeave__UbiquitousDomPropsMixin, _$key__onDragOver__UbiquitousDomPropsMixin, _$key__onDragStart__UbiquitousDomPropsMixin, _$key__onDrop__UbiquitousDomPropsMixin, _$key__onMouseDown__UbiquitousDomPropsMixin, _$key__onMouseEnter__UbiquitousDomPropsMixin, _$key__onMouseLeave__UbiquitousDomPropsMixin, _$key__onMouseMove__UbiquitousDomPropsMixin, _$key__onMouseOut__UbiquitousDomPropsMixin, _$key__onMouseOver__UbiquitousDomPropsMixin, _$key__onMouseUp__UbiquitousDomPropsMixin, _$key__onTouchCancel__UbiquitousDomPropsMixin, _$key__onTouchEnd__UbiquitousDomPropsMixin, _$key__onTouchMove__UbiquitousDomPropsMixin, _$key__onTouchStart__UbiquitousDomPropsMixin, _$key__onScroll__UbiquitousDomPropsMixin, _$key__onWheel__UbiquitousDomPropsMixin]; 
  Map get props;

  /// A cache for the MapView used for [aria].
  @Accessor(doNotGenerate: true)
  AriaPropsMapView _aria;

  /// A cache for the MapView used for [dom].
  @Accessor(doNotGenerate: true)
  DomProps _dom;

  /// A view into this map that can be used to access `aria-` props, for convenience.
  ///
  /// Example:
  ///
  ///     (Button()
  ///       ..aria.controls = 'my_popover'
  ///     )('Open popover')
  AriaPropsMixin get aria {
    _aria ??= new AriaPropsMapView(props);
    return _aria;
  }

  /// A view into this map that can be used to access DOM props, for convenience.
  ///
  /// Example:
  ///
  ///     (Tab()
  ///       ..dom.draggable = true
  ///     )('Untitled Document')
  DomPropsMixin get dom {
    _dom ??= new DomProps(null, props);
    return _dom;
  }

  /// Whether the element if focusable.
  /// Must be a valid integer or String of valid integer.
  dynamic get tabIndex => props[_$key__tabIndex__UbiquitousDomPropsMixin];  set tabIndex(dynamic value) => props[_$key__tabIndex__UbiquitousDomPropsMixin] = value;

  /// Unique identifier.
  /// Must be unique amongst all the ids, and contain at least one character.
  String get id => props[_$key__id__UbiquitousDomPropsMixin];  set id(String value) => props[_$key__id__UbiquitousDomPropsMixin] = value;

  /// Represents advisory information about the element.
  String get title => props[_$key__title__UbiquitousDomPropsMixin];  set title(String value) => props[_$key__title__UbiquitousDomPropsMixin] = value;

  /// An inline CSS style for the element.
  ///
  ///     ..style = {
  ///       'width': '${state.progress * 100}%',
  ///       'display': state.isHidden ? 'none' : '',
  ///     }
  ///
  /// See: <https://facebook.github.io/react/tips/inline-styles.html>
  Map<String, dynamic> get style => props[_$key__style__UbiquitousDomPropsMixin];  set style(Map<String, dynamic> value) => props[_$key__style__UbiquitousDomPropsMixin] = value;

  /// Callback for when the user copies the content of an element
  ClipboardEventCallback get onCopy => props[_$key__onCopy__UbiquitousDomPropsMixin];  set onCopy(ClipboardEventCallback value) => props[_$key__onCopy__UbiquitousDomPropsMixin] = value;

  /// Callback for when the user cuts the content of an element
  ClipboardEventCallback get onCut => props[_$key__onCut__UbiquitousDomPropsMixin];  set onCut(ClipboardEventCallback value) => props[_$key__onCut__UbiquitousDomPropsMixin] = value;

  /// Callback for when the user pastes some content in an element
  ClipboardEventCallback get onPaste => props[_$key__onPaste__UbiquitousDomPropsMixin];  set onPaste(ClipboardEventCallback value) => props[_$key__onPaste__UbiquitousDomPropsMixin] = value;

  /// Callback for when the user is pressing a key
  KeyboardEventCallback get onKeyDown => props[_$key__onKeyDown__UbiquitousDomPropsMixin];  set onKeyDown(KeyboardEventCallback value) => props[_$key__onKeyDown__UbiquitousDomPropsMixin] = value;

  /// Callback for when the user presses a key
  KeyboardEventCallback get onKeyPress => props[_$key__onKeyPress__UbiquitousDomPropsMixin];  set onKeyPress(KeyboardEventCallback value) => props[_$key__onKeyPress__UbiquitousDomPropsMixin] = value;

  /// Callback for when the user releases a key
  KeyboardEventCallback get onKeyUp => props[_$key__onKeyUp__UbiquitousDomPropsMixin];  set onKeyUp(KeyboardEventCallback value) => props[_$key__onKeyUp__UbiquitousDomPropsMixin] = value;

  /// Callback for when an element gets focus
  FocusEventCallback get onFocus => props[_$key__onFocus__UbiquitousDomPropsMixin];  set onFocus(FocusEventCallback value) => props[_$key__onFocus__UbiquitousDomPropsMixin] = value;

  /// Callback for when an element loses focus
  FocusEventCallback get onBlur => props[_$key__onBlur__UbiquitousDomPropsMixin];  set onBlur(FocusEventCallback value) => props[_$key__onBlur__UbiquitousDomPropsMixin] = value;

  /// Callback for  when the content of a form element, the selection, or the checked state have changed (for <input>,
  /// <keygen>, <select>, and <textarea>)
  FormEventCallback get onChange => props[_$key__onChange__UbiquitousDomPropsMixin];  set onChange(FormEventCallback value) => props[_$key__onChange__UbiquitousDomPropsMixin] = value;

  /// Callback for when an element gets user input
  FormEventCallback get onInput => props[_$key__onInput__UbiquitousDomPropsMixin];  set onInput(FormEventCallback value) => props[_$key__onInput__UbiquitousDomPropsMixin] = value;

  /// Callback for when a form is submitted
  FormEventCallback get onSubmit => props[_$key__onSubmit__UbiquitousDomPropsMixin];  set onSubmit(FormEventCallback value) => props[_$key__onSubmit__UbiquitousDomPropsMixin] = value;

  /// Callback for when a form is reset
  FormEventCallback get onReset => props[_$key__onReset__UbiquitousDomPropsMixin];  set onReset(FormEventCallback value) => props[_$key__onReset__UbiquitousDomPropsMixin] = value;

  /// Callback for when the user clicks on an element
  MouseEventCallback get onClick => props[_$key__onClick__UbiquitousDomPropsMixin];  set onClick(MouseEventCallback value) => props[_$key__onClick__UbiquitousDomPropsMixin] = value;

  /// Callback for when the user right-clicks on an element to open a context menu
  MouseEventCallback get onContextMenu => props[_$key__onContextMenu__UbiquitousDomPropsMixin];  set onContextMenu(MouseEventCallback value) => props[_$key__onContextMenu__UbiquitousDomPropsMixin] = value;

  /// Callback for when the user double-clicks on an element
  MouseEventCallback get onDoubleClick => props[_$key__onDoubleClick__UbiquitousDomPropsMixin];  set onDoubleClick(MouseEventCallback value) => props[_$key__onDoubleClick__UbiquitousDomPropsMixin] = value;

  /// Callback for when an element is being dragged
  MouseEventCallback get onDrag => props[_$key__onDrag__UbiquitousDomPropsMixin];  set onDrag(MouseEventCallback value) => props[_$key__onDrag__UbiquitousDomPropsMixin] = value;

  /// Callback for when the user has finished dragging an element
  MouseEventCallback get onDragEnd => props[_$key__onDragEnd__UbiquitousDomPropsMixin];  set onDragEnd(MouseEventCallback value) => props[_$key__onDragEnd__UbiquitousDomPropsMixin] = value;

  /// Callback for when the dragged element enters the drop target
  MouseEventCallback get onDragEnter => props[_$key__onDragEnter__UbiquitousDomPropsMixin];  set onDragEnter(MouseEventCallback value) => props[_$key__onDragEnter__UbiquitousDomPropsMixin] = value;

  /// Callback for when the dragged element exits the drop target
  MouseEventCallback get onDragExit => props[_$key__onDragExit__UbiquitousDomPropsMixin];  set onDragExit(MouseEventCallback value) => props[_$key__onDragExit__UbiquitousDomPropsMixin] = value;

  /// Callback for when the dragged element leaves the drop target
  MouseEventCallback get onDragLeave => props[_$key__onDragLeave__UbiquitousDomPropsMixin];  set onDragLeave(MouseEventCallback value) => props[_$key__onDragLeave__UbiquitousDomPropsMixin] = value;

  /// Callback for when the dragged element is over the drop target
  MouseEventCallback get onDragOver => props[_$key__onDragOver__UbiquitousDomPropsMixin];  set onDragOver(MouseEventCallback value) => props[_$key__onDragOver__UbiquitousDomPropsMixin] = value;

  /// Callback for when the user starts to drag an element
  MouseEventCallback get onDragStart => props[_$key__onDragStart__UbiquitousDomPropsMixin];  set onDragStart(MouseEventCallback value) => props[_$key__onDragStart__UbiquitousDomPropsMixin] = value;

  /// Callback for when the dragged element is dropped on the drop target
  MouseEventCallback get onDrop => props[_$key__onDrop__UbiquitousDomPropsMixin];  set onDrop(MouseEventCallback value) => props[_$key__onDrop__UbiquitousDomPropsMixin] = value;

  /// Callback for when the user presses a mouse button over an element
  MouseEventCallback get onMouseDown => props[_$key__onMouseDown__UbiquitousDomPropsMixin];  set onMouseDown(MouseEventCallback value) => props[_$key__onMouseDown__UbiquitousDomPropsMixin] = value;

  /// Callback for when the pointer is moved onto an element
  MouseEventCallback get onMouseEnter => props[_$key__onMouseEnter__UbiquitousDomPropsMixin];  set onMouseEnter(MouseEventCallback value) => props[_$key__onMouseEnter__UbiquitousDomPropsMixin] = value;

  /// Callback for when the pointer is moved out of an element
  MouseEventCallback get onMouseLeave => props[_$key__onMouseLeave__UbiquitousDomPropsMixin];  set onMouseLeave(MouseEventCallback value) => props[_$key__onMouseLeave__UbiquitousDomPropsMixin] = value;

  /// Callback for when the pointer is moving while it is over an element
  MouseEventCallback get onMouseMove => props[_$key__onMouseMove__UbiquitousDomPropsMixin];  set onMouseMove(MouseEventCallback value) => props[_$key__onMouseMove__UbiquitousDomPropsMixin] = value;

  /// Callback for when a user moves the mouse pointer out of an element, or out of one of its children
  MouseEventCallback get onMouseOut => props[_$key__onMouseOut__UbiquitousDomPropsMixin];  set onMouseOut(MouseEventCallback value) => props[_$key__onMouseOut__UbiquitousDomPropsMixin] = value;

  /// Callback for when the pointer is moved onto an element, or onto one of its children
  MouseEventCallback get onMouseOver => props[_$key__onMouseOver__UbiquitousDomPropsMixin];  set onMouseOver(MouseEventCallback value) => props[_$key__onMouseOver__UbiquitousDomPropsMixin] = value;

  /// Callback for when a user releases a mouse button over an element
  MouseEventCallback get onMouseUp => props[_$key__onMouseUp__UbiquitousDomPropsMixin];  set onMouseUp(MouseEventCallback value) => props[_$key__onMouseUp__UbiquitousDomPropsMixin] = value;

  /// Callback for when the touch is interrupted
  TouchEventCallback get onTouchCancel => props[_$key__onTouchCancel__UbiquitousDomPropsMixin];  set onTouchCancel(TouchEventCallback value) => props[_$key__onTouchCancel__UbiquitousDomPropsMixin] = value;

  /// Callback for when a finger is removed from a touch screen
  TouchEventCallback get onTouchEnd => props[_$key__onTouchEnd__UbiquitousDomPropsMixin];  set onTouchEnd(TouchEventCallback value) => props[_$key__onTouchEnd__UbiquitousDomPropsMixin] = value;

  /// Callback for when a finger is dragged across the screen
  TouchEventCallback get onTouchMove => props[_$key__onTouchMove__UbiquitousDomPropsMixin];  set onTouchMove(TouchEventCallback value) => props[_$key__onTouchMove__UbiquitousDomPropsMixin] = value;

  /// Callback for when a finger is placed on a touch screen
  TouchEventCallback get onTouchStart => props[_$key__onTouchStart__UbiquitousDomPropsMixin];  set onTouchStart(TouchEventCallback value) => props[_$key__onTouchStart__UbiquitousDomPropsMixin] = value;

  /// Callback for when an element's scrollbar is being scrolled
  UIEventCallback get onScroll => props[_$key__onScroll__UbiquitousDomPropsMixin];  set onScroll(UIEventCallback value) => props[_$key__onScroll__UbiquitousDomPropsMixin] = value;

  /// Callback for when the mouse wheel rolls up or down over an element
  WheelEventCallback get onWheel => props[_$key__onWheel__UbiquitousDomPropsMixin];  set onWheel(WheelEventCallback value) => props[_$key__onWheel__UbiquitousDomPropsMixin] = value;
}
